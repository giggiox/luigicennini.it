[{"content":"\u003ch1 id=\"curve-bézier\"\u003eCurve Bézier\u003c/h1\u003e\n\u003cp\u003eLe curve di Bézier sono un concetto fondamentale nella computer grafica e nel disegno vettoriale. Sono utilizzate per descrivere curve attraverso il controllo di punti chiamati \u0026ldquo;punti di controllo\u0026rdquo;.\nQueste curve sono state introdotte da Pierre Bézier negli anni \u0026lsquo;60 come metodo per rappresentare curve su schermi di computer.\nUna curva di Bézier ha la forma\u003c/p\u003e\n\u003cp\u003e$$\\underline{x}(t) = \\sum_{i=0}^n \\underline{b}_i B_i^n(t), t\\in[0,1]$$\u003c/p\u003e\n\u003cp\u003eDove,\u003c/p\u003e\n\u003cp\u003e$$B_i^n(t) = {n \\choose i}t^i(1-t)^{n-i}, i= 0,\u0026hellip;,n$$\u003c/p\u003e\n\u003cp\u003esono gli n+1 polinomi di base di Bernstein.\u003c/p\u003e\n\u003cp\u003eNell\u0026rsquo;editor sottostante ho implementato una versione interattiva di queste curve.\nGli algoritmi che ho implementato sono l\u0026rsquo;algoritmo per la computazione della curva ovvero l\u0026rsquo; \u003cstrong\u003ealgoritmo di de Casteljau\u003c/strong\u003e e l\u0026rsquo;algoritmo di degree elevation.\u003c/p\u003e\n\u003cp\u003eIstruzioni editor:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e2 click con tasto sinistro per aggiungere un nuovo punto di controllo\u003c/li\u003e\n\u003cli\u003emuovi i punti di controllo trascinandoli tenendo premuto il tasto sinistro\u003c/li\u003e\n\u003cli\u003etasto destro ripetutamente per togliere poligono di controllo e lo schema di interpolazione\u003c/li\u003e\n\u003c/ul\u003e\n\r\n \r\n\u003cscript src=\"/p5.min.js\"\u003e\u003c/script\u003e\r\n\u003cscript src=\"/math.js\"\u003e\u003c/script\u003e\r\n\n\r\n \r\n\u003cdiv id =\"firstCanvas\"\u003e\u003c/div\u003e\r\n\r\n\r\n\r\n\r\n\u003cscript\u003e\r\n//TODO TUTTO QUESTO E DA RIGUARDARE SERVE PER FARE IL LOAD E L'UNLOAD DEI CANVAS, PER AVERE PERFORMANCE MIGLIORI\r\n/**let sketchLoaded = false;\r\nwindow.addEventListener('scroll', checkScroll);\r\n\r\nfunction checkScroll() {\r\n      let scrollY = window.scrollY || window.pageYOffset || document.documentElement.scrollTop;\r\n\r\n      let triggerY = document.getElementById(\"secondCanvas\").offsetTop - screen.height;\r\n\r\n      // Se lo scroll supera la coordinata triggerY e lo sketch non è ancora stato caricato, caricalo\r\n      if (scrollY \u003e triggerY \u0026\u0026 !sketchLoaded) {\r\n\t\tconsole.log(\"arrivato\")\r\n        \r\n\t\t//new p5(secondSketch,\"secondCanvas\");\r\n\t\tsketchLoaded = true;\r\n        // Chiamare la funzione che inizializza il tuo sketch p5.js\r\n        \r\n      } else if (scrollY \u003c= triggerY \u0026\u0026 sketchLoaded) {\r\n        // Altrimenti, se lo scroll è prima della coordinata triggerY e lo sketch è caricato, esegui il \"unload\"\r\n        //unloadSketch();\r\n\t\tsketchLoaded = false;\r\n      }\r\n}\r\n**/\r\n\r\n\u003c/script\u003e\r\n\r\n\n\u003cp\u003e\u003cstrong\u003eWarning\u003c/strong\u003e: se non stai vedendo correttamente (o non stai vedendo) lo sketch sottostante, visita \u003ca href=\"https://editor.p5js.org/giggiox/full/nyiLHZ80x\"\u003equesto link\u003c/a\u003e. Oppure \u003ca href=\"https://editor.p5js.org/giggiox/sketches/nyiLHZ80x\"\u003equesto link\u003c/a\u003e per vedere e modificare il codice sorgente.\u003c/p\u003e\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\u003cdiv id =\"thirdCanvas\" \u003e\u003c/div\u003e\r\n\r\n\u003cdiv class=\"container text-center\" id=\"forWidth\"\u003e\r\n\t\u003cdiv class=\"row\"\u003e\r\n\t\t\t\r\n\t\t\u003cdiv class=\"col-sm-5 col-md-6\" id =\"sliderCol3\"\u003e\r\n\t\tt\r\n\t\t\u003c/div\u003e\r\n\t\t\r\n\t\t\u003cdiv class=\"col-sm-5 offset-sm-2 col-md-6 offset-md-0\" id =\"granularity3\"\u003e\r\n\t\tgranularity\r\n\t\t\u003c/div\u003e\r\n\t\t\r\n\t\u003c/div\u003e\r\n\u003c/div\u003e\r\n\u003cdiv class=\"container text-center\"\u003e\r\n\t\u003cdiv class=\"row\"\u003e\r\n\t\t\u003cdiv class=\"col-sm-5 col-md-6\"\u003e\r\n\t\t\tauto play\r\n\t\t\t\u003cbr\u003e\r\n\t\t\t\u003cdiv class=\"checkbox-wrapper-6\" id=\"autoPlay3\" style=\"display: inline-block;\"\u003e\r\n\t\t\t  \u003cinput class=\"tgl tgl-light\" id=\"cb1-6\" type=\"checkbox\" /\u003e\r\n\t\t\t  \u003clabel class=\"tgl-btn\" for=\"cb1-6\"\u003e\r\n\t\t\t\u003c/div\u003e\r\n\t\t\t\r\n\t\t\u003c/div\u003e\r\n\t\t\u003cdiv class=\"col-sm-5 offset-sm-2 col-md-6 offset-md-0\"\u003e\r\n\t\t\t\u003cbutton class=\"button button2\" id=\"degreeElevation3\"\u003edegree elevation\u003c/button\u003e\r\n\t\t\u003c/div\u003e\r\n\t\u003c/div\u003e\r\n\u003c/div\u003e\r\n\r\n\r\n\u003cscript\u003e\r\nvar secondSketch = function(sketch){\r\n\r\n\tvar bezierCurve;\r\n\tvar slider; var sliderMax = 100;\r\n\tvar checkBoxAutoPlay;  let checkedBoxAutoPlay = false;let addToSlider = 1;\r\n\tvar checkBoxShowConstructLines;\r\n\tvar checkBoxShowControlPolygonLines;\r\n\tvar checkBoxShowCurveTrace;\r\n\tvar checkBoxShowConstructPoints;\r\n\tvar granularity,button,button1;\r\n\r\n\tvar canvasResizeFactor = 1.6;\r\n\r\n\tsketch.setup = function(){\r\n\t\tbezierCurve = new BezierCurve([[sketch.windowWidth/canvasResizeFactor/1.5,sketch.windowHeight/canvasResizeFactor/3],\r\n\t\t\t\t\t\t\t\t\t\t[sketch.windowWidth/canvasResizeFactor/4,sketch.windowHeight/canvasResizeFactor/1.1]]);\r\n\t\tsketch.frameRate(160); //change this for the slider autoplay velocity\r\n\t\r\n\t\r\n\t\tlet width = document.getElementById(\"forWidth\").offsetWidth;\r\n\t\tvar myCanvas = sketch.createCanvas(width, sketch.windowHeight/1.6);\r\n\t\t/* check for double click since p5js does not offer a Canvas.mouseDoubleClick but only a canvas.mouseClick. Using the function doubleClicked of p5js does not work because it's global and with more than 1 canvas on a page it gets mad */\r\n\t\tdocument.getElementById(\"thirdCanvas\").addEventListener('dblclick', doubleClick);\r\n\t\t\r\n\t\tdocument.getElementById(\"thirdCanvas\").addEventListener('contextmenu',leftClick);\r\n\t\tdocument.getElementById('thirdCanvas').addEventListener('contextmenu',event =\u003e event.preventDefault()); //remove the window menu for right click\r\n\t\t\r\n\t\tslider = sketch.createSlider(0, sliderMax, 1);\r\n\t\tslider.parent(\"sliderCol3\");\r\n\t\tslider.addClass(\"myslider\");\r\n\t\tslider.value(sliderMax);\r\n\t\t\r\n\t\tgranularity = sketch.createSlider(10, 500, 400);\r\n\t\tgranularity.addClass(\"myslider\");\r\n\t\tgranularity.parent(\"granularity3\");\r\n\t\t\r\n\t\t\r\n\t\tdocument.getElementById(\"autoPlay3\").addEventListener('change',myEventCheckBoxAutoPlay);\r\n\t\tdocument.getElementById(\"degreeElevation3\").addEventListener('click',myEventDegreeElevation);\r\n\r\n\t}\r\n\r\n\tsketch.draw = function() {\r\n\t\t//sketch.clear();\r\n\t\t//sketch.background(220, 10);\r\n\t\tsketch.background(250);\r\n\t\tbezierCurve.changeGranularity(granularity.value());\r\n\t\tif(checkedBoxAutoPlay){\r\n\t\t\tif(slider.value() == sliderMax) addToSlider = -1;\r\n\t\t\tif(slider.value() == 0 \u0026\u0026 addToSlider \u003c 0 ) addToSlider = 1;\r\n\t\t\tslider.value((slider.value()+addToSlider)); \r\n\t\t}\r\n\t\tbezierCurve.render(); \r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tclass ConstructLine{\r\n\t  \r\n\t  constructor(p1 = null,p2 = null) {\r\n\t\tthis.p1 = p1;\r\n\t\tthis.p2 = p2;\r\n\t\t\r\n\t  }\r\n\t  render() {\r\n\t\t\t//stroke(126);\r\n\t\t\tsketch.strokeWeight(1.5);\r\n\t\t\tsketch.line(this.p1.x,this.p1.y,this.p2.x,this.p2.y);\r\n\t  }\r\n\t  \r\n\t}\r\n\t\r\n\r\n\t\r\n\tfunction mapSpace(x,in_min, in_max,out_min,out_max) {\r\n\t\treturn (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\r\n\t}\r\n\r\n\tfunction linspace(startValue, stopValue, cardinality) {\r\n\t\tvar arr = [];\r\n\t\tvar step = (stopValue - startValue) / (cardinality - 1);\r\n\t\tfor (var i = 0; i \u003c cardinality; i++) {\r\n\t\t\tarr.push(startValue + (step * i));\r\n\t\t}\r\n\t\treturn arr;\r\n\t}\r\n\t\r\n\tclass BezierCurve{\r\n\t  constructor(points = []) {\r\n\t\t//TODO add the possibility to create a curve passing arguments\r\n\t\t\r\n\t\t\r\n\t\tthis.controlPoints = [];\r\n\t\tthis.draggedControlPointIndex = -1; // by convention = -1 if we are not dragging any point\r\n\t\t\r\n\t\tthis.controlPointsX = [];\r\n\t\tthis.controlPointsY = [];\r\n\t\t\r\n\t\tthis.granularity = 1000;\r\n\t\tthis.t = linspace(0,1,this.granularity);\r\n\t\t\r\n\t\tthis.constructLines = [];\r\n\t\tthis.constructPoints = [];\r\n\t\tthis.controlPolygonLines = [];\r\n\t\t\r\n\t\tthis.checkedShowControlPolygon = true;\r\n\t\tthis.checkedShowConstructLines = true;\r\n\t\tthis.checkedShowCurveTrace = true;\r\n\t\tthis.checkedShowConstructPoints = true;\r\n\t\t\r\n\t\t\r\n\t\tif(points.length != 0){\r\n\t\t\tfor(let i = 0; i\u003cpoints.length; i++){\r\n\t\t\t\tthis.addControlPoint(points[i][0],points[i][1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t  }\r\n\t  \r\n\t  \r\n\t  degreeElevation(){\r\n\t\tlet lastX, lastY, n;\r\n\t\tn = this.controlPoints.length-1;\r\n\t\tlastX = this.controlPoints[n].x;\r\n\t\tlastY = this.controlPoints[n].y;\r\n\t\t//cant do in place because changing b_i in one iteration then the next cant retrive true b_i value\r\n\t\t//using duplicate copys of coordinates (required extra loop) to do it easily\r\n\t\t\r\n\t\tfor(let i = 1; i \u003c= n; i++){\r\n\t\t  this.controlPoints[i].x = i/(n+1) * this.controlPointsX[i-1] + (n-i+1)/(n+1)*this.controlPointsX[i];\r\n\t\t  this.controlPoints[i].y = i/(n+1) * this.controlPointsY[i-1] + (n-i+1)/(n+1)*this.controlPointsY[i];\r\n\t\t  \r\n\t\t}\r\n\t\tfor(let i=0;i\u003c=n; i++){\r\n\t\t  this.controlPointsX[i] = this.controlPoints[i].x;\r\n\t\t  this.controlPointsY[i] = this.controlPoints[i].y;\r\n\t\t}\r\n\t\tthis.addControlPoint(lastX,lastY);\r\n\t\t\r\n\t\t\r\n\t  }\r\n\t  \r\n\t  changeGranularity(x){\r\n\t\tthis.granularity = x;\r\n\t\tthis.t = linspace(0,1,x);\r\n\t  }\r\n\t\t\r\n\t  \r\n\t\t\r\n\t\t\r\n\t  addControlPoint(x,y){\r\n\t\tthis.controlPoints.push(new ConstructPoint(x,y,6));\r\n\t\tthis.controlPointsX.push(x);\r\n\t\tthis.controlPointsY.push(y);\r\n\t\t\r\n\t\t\r\n\t\tlet n = this.controlPoints.length;\r\n\t\t\r\n\t\t//number of constructPoint (interpolating points) goes as triangular sequence\r\n\t\t//0,1,3,6,10,15,... = n(n+1)/2\r\n\t\t//for n= 0 (1 control points) -\u003e 0 interpolating points\r\n\t\t//for n= 1 (2 control points)-\u003e 1 interpolating points\r\n\t\t//for n= 2 (3 control points) -\u003e 3 interpolating points\r\n\t\t//for n = 3 (4 control points) -\u003e 6 interpolating points\r\n\t\t//and so on\r\n\t\tfor(let i = 0; i \u003c (n*(n+1)/2 - this.constructPoints.length)-1;i++){\r\n\t\t  this.constructPoints.push(new ConstructPoint(x,y));\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t//number of constructLines goes as triangular sequence but with n-1 so (n-1)*(n)/2\r\n\t\t//for n= 0 (1 control points) -\u003e 0 interpolating lines\r\n\t\t//for n= 1 (2 control points)-\u003e 0 interpolating lines\r\n\t\t//for n= 2 (3 control points) -\u003e 1 interpolating lines\r\n\t\t//for n = 3 (4 control points) -\u003e 3 interpolating lines\r\n\t\t//for n = 4 (5 control points) -\u003e 6 interpolating lines\r\n\t\t//and so on\r\n\t\tfor(let i = 0; i\u003c ((n-1)*n/2 - this.constructLines.length)-1; i++){\r\n\t\t  this.constructLines.push(new ConstructLine(this.controlPoints[this.controlPoints.length-2],this.controlPoints[this.controlPoints.length-3]));\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\r\n\t\t//add Control polygon lines\r\n\t\tif(n\u003e1){\r\n\t\t  this.controlPolygonLines.push(new ConstructLine(this.controlPoints[this.controlPoints.length-2],this.controlPoints[this.controlPoints.length-1]));\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t  }\r\n\t  \r\n\t  showConstructPoints(){\r\n\t\tthis.checkedShowConstructPoints = !this.checkedShowConstructPoints;\r\n\t  }\r\n\t  \r\n\t  //change visibility of the control polygon\r\n\t  showControlPolygon(){\r\n\t\tthis.checkedShowControlPolygon = !this.checkedShowControlPolygon;\r\n\t  }\r\n\t  //change visibility of construct lines (interpolating lines)\r\n\t  showConstructLines(){\r\n\t\tthis.checkedShowConstructLines = !this.checkedShowConstructLines;\r\n\t  }\r\n\t  \r\n\t  //change visibility of curve trace\r\n\t  showCurveTrace(){\r\n\t\tthis.checkedShowCurveTrace = ! this.checkedShowCurveTrace;\r\n\t  }\r\n\t  \r\n\t  //calculate de casteljau algorithm\r\n\t  calcBezierPoint(t){\r\n\t\t\r\n\t\tif(this.controlPoints.length == 0){ return null; }\r\n\t\t\r\n\t\t//copy control points coordinate because with them moving, can't make \r\n\t\t//in place replace\r\n\t\tlet controlPointsXCopy = [...this.controlPointsX]; \r\n\t\tlet controlPointsYCopy = [...this.controlPointsY];\r\n\t\tlet k = 0; let m = 0;\r\n\t\tfor(let i = 0; i\u003c this.controlPoints.length-1; i++){\r\n\t\t  for(let j = 0; j\u003cthis.controlPoints.length-i-1; j++){\r\n\t\t\tcontrolPointsXCopy[j] = (1-t)*controlPointsXCopy[j] + t*controlPointsXCopy[j+1];        \r\n\t\t\tcontrolPointsYCopy[j] = (1-t)*controlPointsYCopy[j] + t*controlPointsYCopy[j+1];\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tthis.constructPoints[k].x = controlPointsXCopy[j];\r\n\t\t\tthis.constructPoints[k].y = controlPointsYCopy[j];\r\n\t\t\t\r\n\t\t\tif(j\u003e0){\r\n\t\t\t  this.constructLines[m].p1 = this.constructPoints[k];\r\n\t\t\t  this.constructLines[m].p2 = this.constructPoints[k-1];\r\n\t\t\t  m+=1;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tk += 1;\r\n\t\t  }\r\n\t\t}\r\n\t\treturn [controlPointsXCopy[0], controlPointsYCopy[0]]\r\n\t\t\r\n\t  }\r\n\t  \r\n\t  mousePressedAction(){\r\n\t\tfor (let i = 0; i \u003c this.controlPoints.length; i++) {\r\n\t\t  let vertexUI = this.controlPoints[i];\r\n\t\t  \r\n\t\t  if(vertexUI.hasInside(sketch.mouseX,sketch.mouseY)){\r\n\t\t\tthis.draggedControlPointIndex = i;\r\n\t\t  }\r\n\t\t}\r\n\t\t\r\n\t  }\r\n\t  \r\n\t  mouseDraggedAction(){\r\n\t\tif (this.draggedControlPointIndex == -1)\r\n\t\t\t\treturn;\r\n\t\tlet newMouseX = sketch.mouseX;\r\n\t\tlet newMouseY = sketch.mouseY;\r\n\t\t\r\n\t\tthis.controlPoints[this.draggedControlPointIndex].x = newMouseX;\r\n\t\tthis.controlPoints[this.draggedControlPointIndex].y = newMouseY;\r\n\t\tthis.controlPointsX[this.draggedControlPointIndex] = newMouseX;\r\n\t\tthis.controlPointsY[this.draggedControlPointIndex] = newMouseY;\r\n\t\t\r\n\t  }\r\n\t   mouseReleasedAction() {\r\n\t\t\tthis.draggedControlPointIndex = -1;\r\n\t\t}\r\n\t  \r\n\t  \r\n\t  render(){\r\n\t\t\r\n\t\t\r\n\t  \r\n\t\tfor(let i = 0; i \u003c this.controlPoints.length; i++){\r\n\t\t  this.controlPoints[i].render();\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t//commented because this draws the whole curve without accounting the slider\r\n\t\t/*for(let i = 0; i\u003c this.t.length; i++){\r\n\t\t  \r\n\t\t  let tmp = this.calcBezierPoint(this.t[i]);\r\n\t\t  if(tmp != null){\r\n\t\t\t//console.log(tmp[0] + \"  \" + tmp[1]);\r\n\t\t\tstroke(0);\r\n\t\t\tstrokeWeight(2);\r\n\t\t\tellipse(tmp[0],tmp[1], 1, 1);\r\n\t\t  }\r\n\t\t}*/\r\n\t\t\r\n\t\t//the slider.value() != 0 removes imperfections in visualization. (overlapping lines or points not returning to the begininning)\r\n\t\tif(this.checkedShowConstructPoints \u0026\u0026 slider.value() != 0 \u0026\u0026 slider.value() != sliderMax){\r\n\t\t  for(let i = 0; i\u003c this.constructPoints.length; i++){\r\n\t\t\tthis.constructPoints[i].render();\r\n\t\t  }\r\n\t\t}\r\n\t\t\r\n\t\tif(this.checkedShowConstructLines \u0026\u0026 slider.value() != 0 \u0026\u0026 slider.value() != sliderMax){\r\n\t\t  for(let i = 0; i\u003c this.constructLines.length; i++){\r\n\t\t\tthis.constructLines[i].render();\r\n\t\t  }\r\n\t\t}\r\n\t\t\r\n\t\tif(this.checkedShowControlPolygon){\r\n\t\t  for(let i = 0; i\u003c this.controlPolygonLines.length; i++){\r\n\t\t\tthis.controlPolygonLines[i].render();\r\n\t\t  }\r\n\t\t}\r\n\t  \r\n\t  \r\n\t\t\r\n\t\tfor(let i = 0; i\u003c mapSpace(slider.value(),0,100,0,this.granularity); i++){\r\n\t\t  let tmp = this.calcBezierPoint(this.t[i]);\r\n\t\t  if(tmp != null \u0026\u0026  this.checkedShowCurveTrace){\r\n\t\t\tsketch.strokeWeight(1.5);\r\n\t\t\tsketch.stroke(\"blue\");\r\n\t\t\tsketch.point(tmp[0],tmp[1]);\r\n\t\t  }\r\n\t\t}\r\n\t  }\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\tclass ConstructPoint{\r\n\t\tconstructor(x = null, y = null,radius = 3) {\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.radius = radius;\r\n\t\t\tthis.grabbableRadius = radius + 4;\r\n\t\t}\r\n\t\trender() {\r\n\t\t\tsketch.stroke(0);\r\n\t\t\tsketch.strokeWeight(5);\r\n\t\t\tsketch.ellipse(this.x,this.y, this.radius, this.radius);\r\n\t\t}  \r\n\t\t\r\n\t\t/**\r\n\t\thasInside only used for a point that is a bezier control point. We need to know if the mouse is inside in order to move it.\r\n\t\t\r\n\t\t**/\r\n\t\thasInside(x, y) {\r\n\t\t\tlet distance = sketch.dist(this.x, this.y, x, y);\r\n\t\t\treturn distance \u003c= this.grabbableRadius; \r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction doubleClick(){\r\n\t\tbezierCurve.addControlPoint(sketch.mouseX,sketch.mouseY);\r\n\t}\r\n\t\r\n\tsketch.mousePressed = function(){\r\n\t  bezierCurve.mousePressedAction();\r\n\t}\r\n\r\n\tsketch.mouseDragged = function(){\r\n\t  bezierCurve.mouseDraggedAction();\r\n\t}\r\n\r\n\tsketch.mouseReleased = function(){\r\n\t  bezierCurve.mouseReleasedAction()\r\n\t}\r\n\t\r\n\tsketch.windowResized = function(){ \r\n\t\tlet width = document.getElementById(\"forWidth\").offsetWidth;\r\n\t\tsketch.resizeCanvas(width,sketch.widowHeight/1.6);\r\n\t}\r\n\t\r\n\tfunction myEventCheckBoxAutoPlay(){\r\n\t  checkedBoxAutoPlay = !checkedBoxAutoPlay;\r\n\t}\r\n\t\r\n\tfunction myEventCheckBoxShowControlPolygonLines(){\r\n\t  bezierCurve.showControlPolygon();\r\n\t}\r\n\t\r\n\tfunction myEventCheckBoxShowConstructLines(){\r\n\t  bezierCurve.showConstructLines();\r\n\t}\r\n\r\n\tfunction myEventCheckBoxShowCurveTrace(){\r\n\t  bezierCurve.showCurveTrace();\r\n\t}\r\n\r\n\tfunction myEventDegreeElevation(){\r\n\t  bezierCurve.degreeElevation();\r\n\t}\r\n\r\n\tfunction myEventChangeGranularity(){\r\n\t  bezierCurve.changeGranularity(granularity.value());\r\n\t}\r\n\tfunction myEventCheckBoxShowConstructPoints(){\r\n\t\tbezierCurve.showConstructPoints();\r\n\t}\r\n\t\r\n\t\r\n\tvar clickNum = 0;\r\n\tfunction leftClick(){\r\n\t\tclickNum += 1;\r\n\t\tif(clickNum == 1){\r\n\t\t\tbezierCurve.showConstructLines();\r\n\t\t\tbezierCurve.showConstructPoints()\r\n\t\t}\r\n\t\tif(clickNum == 2){\r\n\t\t\tbezierCurve.showControlPolygon();\r\n\t\t\tclickNum = 0;\r\n\t\t}\r\n\t}\r\n\r\n}\r\nnew p5(secondSketch,\"thirdCanvas\");\r\n\r\n\r\n\u003c/script\u003e\r\n\r\n\r\n\r\n\u003cstyle\u003e\r\n\r\ncanvas {\r\n\r\n  border-radius: 30px;\r\n}\r\n\u003c/style\u003e\r\n\r\n\n\u003cbr /\u003e\r\n\u003cbr /\u003e\r\n\u003ch2 id=\"algoritmo-di-de-casteljau\"\u003eAlgoritmo di de Casteljau\u003c/h2\u003e\n\u003cp\u003eL\u0026rsquo;algoritmo di De Casteljau è un metodo iterativo stabile per calcolare i punti su una curva di Bézier.\nL\u0026rsquo;algoritmo funziona in questo modo:\n$$\\underline{b}_i^0(t) = \\underline{b}_i$$\n$$\\underline{b}_i^r(t) = (1-t)\\underline{b}_i^{r-1}(t)+t\\underline{b}_k^{r-1}(t)$$\n$$k=i+1;r=1,\u0026hellip;,n; i=0,\u0026hellip;,n-r$$\u003c/p\u003e\n\u003cp\u003eDove $$\\underline{b}_0^n(t) = \\underline{x}(t)$$ è il punto sulla curva di Bézier associato al valore del parametro t.\u003c/p\u003e\n\u003ch2 id=\"algoritmo-di-degree-elevation\"\u003eAlgoritmo di degree elevation\u003c/h2\u003e\n\u003cp\u003eL\u0026rsquo;algoritmo di degree elevation trasforma una curva di Bézier di grado n in una curva di Bézier di grado n+1:\u003c/p\u003e\n\u003cp\u003e$$\\underline{x}(t)=\\sum_{i=0}^n \\underline{b}_i B_i^n(t)$$\u003c/p\u003e\n\u003cp\u003e$$= \\sum_{i=0}^{n+1} \\underline{c}_i B_i^{n+1}(t)$$\u003c/p\u003e\n\u003cp\u003ein questo modo:\u003c/p\u003e\n\u003cp\u003e$$ \\underline{c}_i= \\frac{i}{n+1} \\underline{b}_k + \\frac{n-i+1}{n+1}\\underline{b}_i; k = i-1; i=1,\u0026hellip;,n$$\u003c/p\u003e\n\u003cp\u003e$$\\underline{c}_0=\\underline{b}_0,\\underline{c}_m=\\underline{b}_n; m = n+1$$\u003c/p\u003e\n\u003ch1 id=\"curve-bézier-3-dimensionali\"\u003eCurve Bézier 3-dimensionali\u003c/h1\u003e\n\u003cp\u003eNell\u0026rsquo;editor sopra i punti di controllo della curva di bezier sono punti di controllo in 2 dimensioni.\nOvvero,\n$$\\underline{b}_i = { b_x \\choose b_y}$$\u003c/p\u003e\n\u003cp\u003eTuttavia tutti gli algoritmi visti sopra funzionano anche per curve tridimensionali, dove i punti di controllo avranno dunuque una componente z. Tutti gli algoritmi restano dunque invariati,\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eWarning\u003c/strong\u003e: se non stai vedendo correttamente (o non stai vedendo) lo sketch sottostante, visita \u003ca href=\"https://editor.p5js.org/giggiox/full/-UfZh9jUd\"\u003equesto link\u003c/a\u003e. Oppure \u003ca href=\"https://editor.p5js.org/giggiox/sketches/-UfZh9jUd\"\u003equesto link\u003c/a\u003e per vedere e modificare il codice sorgente.\u003c/p\u003e\n\r\n \r\n\u003cdiv id =\"fourthCanvas\" \u003e\u003c/div\u003e\r\n\r\n\u003cdiv class=\"container text-center\"\u003e\r\n\t\u003cdiv class=\"row\"\u003e\r\n\t\t\u003cdiv class=\"col-sm-5 col-md-6\" id =\"sliderCol\"\u003e\r\n\t\tt\r\n\t\t\u003c/div\u003e\r\n\t\t\r\n\t\t\u003cdiv class=\"col-sm-5 offset-sm-2 col-md-6 offset-md-0\"\u003e\r\n\t\t\tauto play\r\n\t\t\t\u003cbr\u003e\r\n\t\t\t\u003cdiv class=\"checkbox-wrapper-6\" id=\"autoPlay\" style=\"display: inline-block;\"\u003e\r\n\t\t\t  \u003cinput class=\"tgl tgl-light\" id=\"cb1-6-3\" type=\"checkbox\" /\u003e\r\n\t\t\t  \u003clabel class=\"tgl-btn\" for=\"cb1-6-3\"\u003e\r\n\t\t\t\u003c/div\u003e\r\n\t\t\u003c/div\u003e\r\n\t\u003c/div\u003e\r\n\u003c/div\u003e\r\n\r\n\r\n\u003cscript\u003e\r\nvar fourthSketch = function(sketch){\r\n\r\n\tvar bezierCurve;\r\n\tvar slider; var sliderMax = 100;\r\n\tvar checkBoxAutoPlay;  let checkedBoxAutoPlay = false;let addToSlider = 1;\r\n\tvar checkBoxShowConstructLines;\r\n\tvar checkBoxShowControlPolygonLines;\r\n\tvar chhckBoxShowCurveTrace;\r\n\tvar granularity,button,button1;\r\n\tvar canvasResizeFactor = 1.6;\r\n\t\r\n\t\r\n\tlet addedListener = true;\r\n\r\n\r\n\tsketch.setup = function(){\t\t\r\n\t\tbezierCurve = new BezierCurve([[130,130,-20],[-110,80,-100],[20,-90,-20],[20,45,105]]);\r\n\t\t\r\n\t\t\r\n\t\tsketch.frameRate(60); //change this for the slider autoplay velocity\r\n\t\r\n\t\tlet width = document.getElementById(\"forWidth\").offsetWidth;\r\n\t\tvar myCanvas = sketch.createCanvas(width, sketch.windowHeight/1.6,sketch.WEBGL);\r\n\t\t\r\n\t\tcam2 = sketch.createCamera()\r\n\t\t\r\n\t\t\r\n\t\tsketch.colorMode(sketch.HSB);\r\n\t\tsketch.angleMode(sketch.DEGREES);\r\n\t\tsketch.stroke(0,0,0);\r\n\t\tsketch.strokeWeight(4);\r\n\t\t\r\n\t\tslider = sketch.createSlider(0, sliderMax, 1);\r\n\t\tslider.parent(\"sliderCol\");\r\n\t\tslider.addClass(\"myslider\");\r\n\t\tslider.value(sliderMax);\r\n\t\tdocument.getElementById(\"autoPlay\").addEventListener('change',myEventCheckBoxAutoPlay);\r\n\t\tdocument.getElementById(\"fourthCanvas\").addEventListener('contextmenu',leftClick);\r\n\t\tdocument.getElementById(\"fourthCanvas\").addEventListener('contextmenu',event =\u003e event.preventDefault()); //remove the window menu for right click\r\n\t\tdocument.getElementById(\"fourthCanvas\").addEventListener('dblclick', doubleClick);\r\n\t\t\r\n\t}\r\n\r\n\tsketch.draw = function() {\r\n\t\tsketch.background(250);\r\n\t\t\r\n\t\t// Pan: Cam rotation about y-axis (Left Right)\r\n\t\tlet azimuth = -sketch.atan2(cam2.eyeZ - cam2.centerZ, cam2.eyeX - cam2.centerX);\r\n\t  \r\n\t\t// Tilt: Cam rotation about z-axis (Up Down)\r\n\t\tlet zenith = -sketch.atan2(cam2.eyeY - cam2.centerY, sketch.dist(cam2.eyeX, cam2.eyeZ, cam2.centerX, cam2.centerZ));\r\n\t  \r\n\t\t// f is a scaling factor (depends on canvas size and camera perspective settings)\r\n\t\tlet f = sketch.height * 4.3 / 5;\r\n\t\tlet x = [-1, (sketch.mouseY - sketch.height/2)/f, -(sketch.mouseX - sketch.width/2)/f]\r\n\t  \r\n\t\tlet R = math.multiply(Rz(-zenith), Ry(azimuth))\r\n\t\tx = math.multiply(x, R)\r\n\r\n\t\tlet xMag = sketch.dist(0, 0, 0, x._data[0], x._data[1], x._data[2])\r\n\t\t\r\n\t\tlet objSelected = false;\r\n\t  \r\n\t\tfor(let i = 0; i \u003c bezierCurve.controlPoints.length; i++){\r\n\t\t\tlet dToObj = sketch.dist(cam2.eyeX, cam2.eyeY, cam2.eyeZ, bezierCurve.controlPoints[i].x, bezierCurve.controlPoints[i].y, bezierCurve.controlPoints[i].z);\r\n\t\t\tif(sketch.dist(cam2.eyeX + x._data[0] * dToObj / xMag, cam2.eyeY + x._data[1] * dToObj / xMag, cam2.eyeZ + x._data[2] * dToObj / xMag, bezierCurve.controlPoints[i].x, bezierCurve.controlPoints[i].y, bezierCurve.controlPoints[i].z) \u003c 20) {\r\n\t\t\t\tlet canMove =  true;\r\n\t\t\t\tfor(let j=0;j\u003cbezierCurve.controlPoints.length;j++){\r\n\t\t\t\t\tif(i!=j \u0026\u0026 bezierCurve.controlPoints[j].selected) canMove = false;\r\n\t\t\t\t}\r\n \r\n\t\t\t\tif(sketch.mouseIsPressed  \u0026\u0026 canMove){\r\n\t\t\t\t\tobjSelected = true;\r\n\t\t\t\t\tbezierCurve.controlPoints[i].selected = true;\r\n\t\t\t\t\t\r\n\t\t\t\t\tbezierCurve.controlPoints[i].x = cam2.eyeX + x._data[0] * dToObj / xMag; \r\n\t\t\t\t\tbezierCurve.controlPointsX[i] = bezierCurve.controlPoints[i].x;\r\n\t\t\t\t\tbezierCurve.controlPoints[i].y = cam2.eyeY + x._data[1] * dToObj / xMag; \r\n\t\t\t\t\tbezierCurve.controlPointsY[i] = bezierCurve.controlPoints[i].y;\r\n\t\t\t\t\tbezierCurve.controlPoints[i].z = cam2.eyeZ + x._data[2] * dToObj / xMag;\r\n\t\t\t\t\tbezierCurve.controlPointsZ[i] = bezierCurve.controlPoints[i].z; \r\n\t\t\t\t}else{\r\n\t\t\t\t\tbezierCurve.controlPoints[i].selected = false;\r\n\t\t\t\t\tobjSelected = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t/**if(!objSelected \u0026\u0026 !addedListener){\r\n\t\t\tconsole.log(\"ciao\");\r\n\t\t\tdocument.getElementById(\"fourthCanvas\").addEventListener('click',sketch.orbitControl(4,4));\r\n\t\t\taddedListener = true;\r\n\t\t}else{\r\n\t\t\tdocument.getElementById(\"fourthCanvas\").removeEventListener('click',sketch.orbitControl(4,4))\r\n\t\t\taddedListener = false;\r\n\t\t}**/\r\n\t\tif(!objSelected){\r\n\t\t\tsketch.orbitControl(4,4);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tif(checkedBoxAutoPlay){\r\n\t\t\tif(slider.value() == sliderMax) addToSlider = -1;\r\n\t\t\tif(slider.value() == 0 \u0026\u0026 addToSlider \u003c 0 ) addToSlider = 1;\r\n\t\t\tslider.value((slider.value()+addToSlider)); \r\n\t\t}\r\n\t\tbezierCurve.render(); \r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tclass ConstructLine{\r\n\t  \r\n\t  constructor(p1 = null,p2 = null) {\r\n\t\tthis.p1 = p1;\r\n\t\tthis.p2 = p2;\r\n\t\t\r\n\t  }\r\n\t  render() {\r\n\t\t\t//stroke(126);\r\n\t\t\tsketch.strokeWeight(1.5);\r\n\t\t\tsketch.line(this.p1.x,this.p1.y,this.p1.z,this.p2.x,this.p2.y,this.p2.z);\r\n\t  }\r\n\t  \r\n\t}\r\n\t\r\n\r\n\t\r\n\tfunction mapSpace(x,in_min, in_max,out_min,out_max) {\r\n\t\treturn (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\r\n\t}\r\n\r\n\tfunction linspace(startValue, stopValue, cardinality) {\r\n\t\tvar arr = [];\r\n\t\tvar step = (stopValue - startValue) / (cardinality - 1);\r\n\t\tfor (var i = 0; i \u003c cardinality; i++) {\r\n\t\t\tarr.push(startValue + (step * i));\r\n\t\t}\r\n\t\treturn arr;\r\n\t}\r\n\t\r\n\tclass BezierCurve{\r\n\t  constructor(points = []) {\r\n\t\t//TODO add the possibility to create a curve passing arguments\r\n\t\t\r\n\t\t\r\n\t\tthis.controlPoints = [];\r\n\t\tthis.draggedControlPointIndex = -1; // by convention = -1 if we are not dragging any point\r\n\t\t\r\n\t\tthis.controlPointsX = [];\r\n\t\tthis.controlPointsY = [];\r\n\t\tthis.controlPointsZ = [];\r\n\t\t\r\n\t\tthis.granularity = 1000;\r\n\t\tthis.t = linspace(0,1,this.granularity);\r\n\t\t\r\n\t\tthis.constructLines = [];\r\n\t\tthis.constructPoints = [];\r\n\t\tthis.controlPolygonLines = [];\r\n\t\t\r\n\t\tthis.checkedShowControlPolygon = true;\r\n\t\tthis.checkedShowConstructLines = true;\r\n\t\tthis.checkedShowCurveTrace = true;\r\n\t\tthis.checkedShowConstructPoints = true;\r\n\t\t\r\n\t\t\r\n\t\tif(points.length != 0){\r\n\t\t\tfor(let i = 0;i\u003cpoints.length; i++){\r\n\t\t\t\tthis.addControlPoint(points[i][0],points[i][1],points[i][2])\r\n\t\t\t}\r\n\t\t}\r\n\t  }\r\n\t  \r\n\t  \r\n\t  addControlPoint(x,y,z){\r\n\t\tthis.controlPoints.push(new ConstructPoint(x,y,z,true));\r\n\t\tthis.controlPointsX.push(x);\r\n\t\tthis.controlPointsY.push(y);\r\n\t\tthis.controlPointsZ.push(z);\r\n\t\t\r\n\t\t\r\n\t\tlet n = this.controlPoints.length;\r\n\t\t\r\n\t\t//number of constructPoint (interpolating points) goes as triangular sequence\r\n\t\t//0,1,3,6,10,15,... = n(n+1)/2\r\n\t\t//for n= 0 (1 control points) -\u003e 0 interpolating points\r\n\t\t//for n= 1 (2 control points)-\u003e 1 interpolating points\r\n\t\t//for n= 2 (3 control points) -\u003e 3 interpolating points\r\n\t\t//for n = 3 (4 control points) -\u003e 6 interpolating points\r\n\t\t//and so on\r\n\t\tfor(let i = 0; i \u003c (n*(n+1)/2 - this.constructPoints.length)-1;i++){\r\n\t\t  this.constructPoints.push(new ConstructPoint(x,y,z));\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t//number of constructLines goes as triangular sequence but with n-1 so (n-1)*(n)/2\r\n\t\t//for n= 0 (1 control points) -\u003e 0 interpolating lines\r\n\t\t//for n= 1 (2 control points)-\u003e 0 interpolating lines\r\n\t\t//for n= 2 (3 control points) -\u003e 1 interpolating lines\r\n\t\t//for n = 3 (4 control points) -\u003e 3 interpolating lines\r\n\t\t//for n = 4 (5 control points) -\u003e 6 interpolating lines\r\n\t\t//and so on\r\n\t\tfor(let i = 0; i\u003c ((n-1)*n/2 - this.constructLines.length)-1; i++){\r\n\t\t  this.constructLines.push(new ConstructLine(this.controlPoints[this.controlPoints.length-2],this.controlPoints[this.controlPoints.length-3]));\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\r\n\t\t//add Control polygon lines\r\n\t\tif(n\u003e1){\r\n\t\t  this.controlPolygonLines.push(new ConstructLine(this.controlPoints[this.controlPoints.length-2],this.controlPoints[this.controlPoints.length-1]));\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t  }\r\n\t  \r\n\t  showConstructPoints(){\r\n\t\tthis.checkedShowConstructPoints = !this.checkedShowConstructPoints;\r\n\t  }\r\n\t  \r\n\t  //change visibility of the control polygon\r\n\t  showControlPolygon(){\r\n\t\tthis.checkedShowControlPolygon = !this.checkedShowControlPolygon;\r\n\t  }\r\n\t  //change visibility of construct lines (interpolating lines)\r\n\t  showConstructLines(){\r\n\t\tthis.checkedShowConstructLines = !this.checkedShowConstructLines;\r\n\t  }\r\n\t  \r\n\t  //change visibility of curve trace\r\n\t  showCurveTrace(){\r\n\t\tthis.checkedShowCurveTrace = ! this.checkedShowCurveTrace;\r\n\t  }\r\n\t  \r\n\t  //calculate de casteljau algorithm\r\n\t  calcBezierPoint(t){\r\n\t\t\r\n\t\tif(this.controlPoints.length == 0){ return null; }\r\n\t\t\r\n\t\t//copy control points coordinate because with them moving, can't make \r\n\t\t//in place replace\r\n\t\tlet controlPointsXCopy = [...this.controlPointsX]; \r\n\t\tlet controlPointsYCopy = [...this.controlPointsY];\r\n\t\tlet controlPointsZCopy = [...this.controlPointsZ];\r\n\t\tlet k = 0; let m = 0;\r\n\t\tfor(let i = 0; i\u003c this.controlPoints.length-1; i++){\r\n\t\t  for(let j = 0; j\u003cthis.controlPoints.length-i-1; j++){\r\n\t\t\tcontrolPointsXCopy[j] = (1-t)*controlPointsXCopy[j] + t*controlPointsXCopy[j+1];        \r\n\t\t\tcontrolPointsYCopy[j] = (1-t)*controlPointsYCopy[j] + t*controlPointsYCopy[j+1];\r\n\t\t\tcontrolPointsZCopy[j] = (1-t)*controlPointsZCopy[j] + t*controlPointsZCopy[j+1];\r\n\t\t\tthis.constructPoints[k].x = controlPointsXCopy[j];\r\n\t\t\tthis.constructPoints[k].y = controlPointsYCopy[j];\r\n\t\t\tthis.constructPoints[k].z = controlPointsZCopy[j];\r\n\t\t\t\r\n\t\t\tif(j\u003e0){\r\n\t\t\t  this.constructLines[m].p1 = this.constructPoints[k];\r\n\t\t\t  this.constructLines[m].p2 = this.constructPoints[k-1];\r\n\t\t\t  m+=1;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tk += 1;\r\n\t\t  }\r\n\t\t}\r\n\t\treturn [controlPointsXCopy[0], controlPointsYCopy[0],controlPointsZCopy[0]]\r\n\t\t\r\n\t  }\r\n\t  \r\n\t  mousePressedAction(){\r\n\t\tfor (let i = 0; i \u003c this.controlPoints.length; i++) {\r\n\t\t  let vertexUI = this.controlPoints[i];\r\n\t\t  \r\n\t\t  if(vertexUI.hasInside(sketch.mouseX,sketch.mouseY)){\r\n\t\t\tthis.draggedControlPointIndex = i;\r\n\t\t  }\r\n\t\t}\r\n\t\t\r\n\t  }\r\n\t  \r\n\t  mouseDraggedAction(){\r\n\t\tif (this.draggedControlPointIndex == -1)\r\n\t\t\t\treturn;\r\n\t\tlet newMouseX = sketch.mouseX;\r\n\t\tlet newMouseY = sketch.mouseY;\r\n\t\t\r\n\t\tthis.controlPoints[this.draggedControlPointIndex].x = newMouseX;\r\n\t\tthis.controlPoints[this.draggedControlPointIndex].y = newMouseY;\r\n\t\tthis.controlPointsX[this.draggedControlPointIndex] = newMouseX;\r\n\t\tthis.controlPointsY[this.draggedControlPointIndex] = newMouseY;\r\n\t\t\r\n\t  }\r\n\t   mouseReleasedAction() {\r\n\t\t\tthis.draggedControlPointIndex = -1;\r\n\t\t}\r\n\t  \r\n\t  \r\n\t  render(){\r\n\t\tfor(let i = 0; i \u003c this.controlPoints.length; i++){\r\n\t\t  this.controlPoints[i].render();\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t//commented because this draws the whole curve without accounting the slider\r\n\t\t/*for(let i = 0; i\u003c this.t.length; i++){\r\n\t\t  let tmp = this.calcBezierPoint(this.t[i]);\r\n\t\t  if(tmp != null){\r\n\t\t\t//console.log(tmp[0] + \"  \" + tmp[1]);\r\n\t\t\tstroke(0);\r\n\t\t\tstrokeWeight(2);\r\n\t\t\tellipse(tmp[0],tmp[1], 1, 1);\r\n\t\t  }\r\n\t\t}*/\r\n\t\t\r\n\t\t//the slider.value() != 0 removes imperfections in visualization. (overlapping lines or points not returning to the begininning)\r\n\t\tif(this.checkedShowConstructPoints \u0026\u0026 slider.value() != 0 \u0026\u0026 slider.value() != sliderMax){\r\n\t\t  for(let i = 0; i\u003c this.constructPoints.length; i++){\r\n\t\t\tthis.constructPoints[i].render();\r\n\t\t  }\r\n\t\t}\r\n\t\t\r\n\t\tif(this.checkedShowConstructLines \u0026\u0026 slider.value() != 0 \u0026\u0026 slider.value() != sliderMax){\r\n\t\t  for(let i = 0; i\u003c this.constructLines.length; i++){\r\n\t\t\tthis.constructLines[i].render();\r\n\t\t  }\r\n\t\t}\r\n\t\t\r\n\t\tif(this.checkedShowControlPolygon){\r\n\t\t  for(let i = 0; i\u003c this.controlPolygonLines.length; i++){\r\n\t\t\tthis.controlPolygonLines[i].render();\r\n\t\t  }\r\n\t\t}\r\n\t  \r\n\t\tsketch.stroke(\"blue\");\r\n\t\tsketch.beginShape();\r\n\t\tfor(let i = 0; i\u003c mapSpace(slider.value(),0,100,0,this.granularity); i++){\r\n\t\t\t\r\n\t\t  let tmp = this.calcBezierPoint(this.t[i]);\r\n\t\t  if(tmp != null \u0026\u0026  this.checkedShowCurveTrace){\r\n\t\t\tsketch.strokeWeight(2);\r\n\t\t\t\r\n\t\t\t//se vuoi che la curva sia per esempio blu devi togliere quel scketch.POINTS, ma poi diventa tutto molto,molto più lento.\r\n\t\t\tsketch.vertex(tmp[0],tmp[1],tmp[2]);\r\n\t\t  }\r\n\t\t}\r\n\t\tsketch.stroke(0)\r\n\t\tsketch.endShape();\r\n\t  }\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\tclass ConstructPoint{\r\n\t\tconstructor(x = null, y = null,  z = null, isControlPoint = false, radius = 3) {\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = z;\r\n\t\t\tthis.radius = radius;\r\n\t\t\tthis.selected = false; //used for moving points around\r\n\t\t\tthis.isControlPoint = isControlPoint;\r\n\t\t}\r\n\t\trender() {\r\n\t\t\tif(this.isControlPoint){\r\n\t\t\t\tsketch.push(); // enter local coordinate system\r\n\t\t\t\tsketch.translate(this.x, this.y, this.z);\r\n\t\t\t\tsketch.sphere(this.radius);\r\n\t\t\t\tsketch.pop(); // exit local coordinate system (back to global coordinates)\r\n\t\t\t}else{\r\n\t\t\t\tsketch.strokeWeight(5);\r\n\t\t\t\tsketch.beginShape(sketch.POINTS);\r\n\t\t\t\tsketch.vertex(this.x,this.y,this.z);\r\n\t\t\t\tsketch.endShape();\r\n\t\t\t}\r\n\t\t}  \r\n\t\t\r\n\t\t/**\r\n\t\thasInside only used for a point that is a bezier control point. We need to know if the mouse is inside in order to move it.\r\n\t\t\r\n\t\t**/\r\n\t\thasInside(x, y) {\r\n\t\t\tlet distance = sketch.dist(this.x, this.y, x, y);\r\n\t\t\treturn distance \u003c= this.grabbableRadius; \r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tsketch.mousePressed = function(){\r\n\t  bezierCurve.mousePressedAction();\r\n\t}\r\n\r\n\tsketch.mouseDragged = function(){\r\n\t  bezierCurve.mouseDraggedAction();\r\n\t}\r\n\r\n\tsketch.mouseReleased = function(){\r\n\t  bezierCurve.mouseReleasedAction()\r\n\t}\r\n\t\r\n\tsketch.windowResized = function(){ \r\n\t\tlet width = document.getElementById(\"forWidth\").offsetWidth;\r\n\t\tsketch.resizeCanvas(width,sketch.widowHeight/1.6);\r\n\t}\r\n\t\r\n\tfunction myEventCheckBoxAutoPlay(){\r\n\t  checkedBoxAutoPlay = !checkedBoxAutoPlay;\r\n\t}\r\n\t\r\n\tfunction myEventCheckBoxShowControlPolygonLines(){\r\n\t  bezierCurve.showControlPolygon();\r\n\t}\r\n\t\r\n\tfunction myEventCheckBoxShowConstructLines(){\r\n\t  bezierCurve.showConstructLines();\r\n\t}\r\n\r\n\tfunction myEventCheckBoxShowCurveTrace(){\r\n\t  bezierCurve.showCurveTrace();\r\n\t}\r\n\r\n\tvar clickNum = 0;\r\n\tfunction leftClick(){\r\n\t\tclickNum += 1;\r\n\t\tif(clickNum == 1){\r\n\t\t\tbezierCurve.showConstructLines();\r\n\t\t\tbezierCurve.showConstructPoints()\r\n\t\t}\r\n\t\tif(clickNum == 2){\r\n\t\t\tbezierCurve.showControlPolygon();\r\n\t\t\tclickNum = 0;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tfunction myEventCheckBoxShowConstructPoints(){\r\n\t\tbezierCurve.showConstructPoints();\r\n\t}\r\n\t\r\n\tfunction doubleClick(){\r\n\t\tbezierCurve.addControlPoint(0,0,0);\r\n\t}\r\n\t\r\n\t// Rotation matrix for rotation about x-axis\r\n\tfunction Rx(th) {\r\n\t\treturn math.matrix([[1, 0, 0],\r\n                 [0, sketch.cos(th), -sketch.sin(th)],\r\n                 [0, sketch.sin(th), sketch.cos(th)]\r\n                ]);\r\n\t}\r\n\r\n\t// Rotation matrix for rotation about y-axis\r\n\tfunction Ry(th) {\r\n\t\treturn math.matrix([[sketch.cos(th), 0, -sketch.sin(th)],\r\n                 [0, 1, 0],\r\n                 [sketch.sin(th), 0, sketch.cos(th)]\r\n                ])\r\n\t}\r\n  \r\n\t// Rotation matrix for rotation about z-axis\r\n\tfunction Rz(th) {\r\n\t\treturn math.matrix([[sketch.cos(th), sketch.sin(th), 0],\r\n                [-sketch.sin(th), sketch.cos(th), 0],\r\n                [0, 0, 1]])\r\n\t}\r\n\r\n}\r\nnew p5(fourthSketch,\"fourthCanvas\");\r\n\r\n\r\n\u003c/script\u003e\r\n\r\n\r\n\n\u003ch1 id=\"patch-di-bézier\"\u003ePatch di Bézier\u003c/h1\u003e\n\u003cp\u003eUna patch di Bézier è definita come\u003c/p\u003e\n\u003cp\u003e$$ \\underline{x}(u,v) = \\sum_{i=0}^n \\sum_{j=0}^m \\underline{c}_{ij} B_i^n(u)B_j^m(v), (u,v)\\in[0,1]^2$$\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eWarning\u003c/strong\u003e: se non stai vedendo correttamente (o non stai vedendo) lo sketch sottostante, visita \u003ca href=\"https://editor.p5js.org/giggiox/full/ePuLYaR4t\"\u003equesto link\u003c/a\u003e. Oppure \u003ca href=\"https://editor.p5js.org/giggiox/sketches/ePuLYaR4t\"\u003equesto link\u003c/a\u003e per vedere e modificare il codice sorgente.\n\r\n\r\n\r\n\u003cdiv id =\"sixthCanvas\" \u003e\u003c/div\u003e\r\n\r\n\r\n\u003cscript\u003e\r\nvar sixthSketch = function(sketch){\r\n\r\n\tvar bezierSurface;\r\n\r\n\r\n\tsketch.setup = function(){\r\n\t\tlet ctrl_pts = [\r\n\t\t\t[[0, 0, 20],  [60, 0, -35],   [90, 0, 60],    [200, 0, 5]],\r\n\t\t\t[[0, 50, 30], [100, 60, -25], [120, 50, 120], [200, 50, 5]],\r\n\t\t\t[[0, 100, 0], [60, 120, 35],  [90, 100, 60],  [200, 100, 45]],\r\n\t\t\t[[0, 150, 0], [60, 150, -35], [90, 180, 60],  [200, 150, 45]]\r\n\t\t];\r\n\t\tbezierSurface = new BezierSurface(ctrl_pts);\r\n\t\tsketch.frameRate(60); //change this for the slider autoplay velocity\r\n\t\tlet width = document.getElementById(\"forWidth\").offsetWidth;\r\n\t\tvar myCanvas = sketch.createCanvas(width, sketch.windowHeight/1.6,sketch.WEBGL);\r\n\t\t\r\n\t\tcam1 = sketch.createCamera();\r\n\t\tcam1.lookAt(100,60,0);\r\n\t\t/* check for double click since p5js does not offer a Canvas.mouseDoubleClick but only a canvas.mouseClick. Using the function doubleClicked of p5js does not work because it's global and with more than 1 canvas on a page it gets mad */\r\n\t\t\r\n\t\t//document.getElementById(\"fifthCanvas\").addEventListener('dblclick', doubleClick);\r\n\t\t\r\n\t\tsketch.colorMode(sketch.HSB);\r\n\t\tsketch.angleMode(sketch.DEGREES);\r\n\t\t\r\n\t\t\r\n\t\tdocument.getElementById(\"sixthCanvas\").addEventListener('contextmenu',leftClick);\r\n\t\tdocument.getElementById(\"sixthCanvas\").addEventListener('contextmenu',event =\u003e event.preventDefault()); //remove the window menu for right click\r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\tsketch.draw = function() {\r\n\t\tsketch.background(250);\r\n\t\t\r\n\t\t// Pan: Cam rotation about y-axis (Left Right)\r\n\t\tlet azimuth = -sketch.atan2(cam1.eyeZ - cam1.centerZ, cam1.eyeX - cam1.centerX);\r\n\t  \r\n\t\t// Tilt: Cam rotation about z-axis (Up Down)\r\n\t\tlet zenith = -sketch.atan2(cam1.eyeY - cam1.centerY, sketch.dist(cam1.eyeX, cam1.eyeZ, cam1.centerX, cam1.centerZ));\r\n\t  \r\n\t\t// f is a scaling factor (depends on canvas size and camera perspective settings)\r\n\t\tlet f = sketch.height * 4.3 / 5;\r\n\t\tlet x = [-1, (sketch.mouseY - sketch.height/2)/f, -(sketch.mouseX - sketch.width/2)/f]\r\n\t  \r\n\t\tlet R = math.multiply(Rz(-zenith), Ry(azimuth))\r\n\t\tx = math.multiply(x, R)\r\n\r\n\t\tlet xMag = sketch.dist(0, 0, 0, x._data[0], x._data[1], x._data[2])\r\n\t\t\r\n\t\tlet objSelected = false;\r\n\t\t\r\n\t\t\r\n\t\tfor(let i = 0; i \u003c bezierSurface.controlPoints.length; i++){\r\n\t\t\tlet dToObj = sketch.dist(cam1.eyeX, cam1.eyeY, cam1.eyeZ, bezierSurface.controlPoints[i].x, bezierSurface.controlPoints[i].y, bezierSurface.controlPoints[i].z);\r\n\t\t\tif(sketch.dist(cam1.eyeX + x._data[0] * dToObj / xMag, \r\n\t\t\t\tcam1.eyeY + x._data[1] * dToObj / xMag, \r\n\t\t\t\tcam1.eyeZ + x._data[2] * dToObj / xMag, \r\n\t\t\t\tbezierSurface.controlPoints[i].x, bezierSurface.controlPoints[i].y, bezierSurface.controlPoints[i].z) \u003c 20) {\r\n\t\t\t\tlet canMove =  true;\r\n\t\t\t\tfor(let j=0;j\u003cbezierSurface.controlPoints.length;j++){\r\n\t\t\t\t\tif(i!=j \u0026\u0026 bezierSurface.controlPoints[j].selected) canMove = false;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(sketch.mouseIsPressed \u0026\u0026 canMove){\r\n\t\t\t\t\tobjSelected = true;\r\n\t\t\t\t\tbezierSurface.controlPoints[i].selected = true;\r\n\t\t\t\t\t\r\n\t\t\t\t\tbezierSurface.controlPoints[i].x =cam1.eyeX + (x._data[0] * dToObj) / xMag;\r\n\t\t\t\t\tbezierSurface.controlPoints[i].y =cam1.eyeY + (x._data[1] * dToObj) / xMag;\r\n\t\t\t\t\tbezierSurface.controlPoints[i].z =cam1.eyeZ + (x._data[2] * dToObj) / xMag;\r\n\t\t\t\t\r\n\t\t\t\t\tlet idx = math.floor(i/4);\r\n\t\t\t\t   \r\n\t\t\t\t\tbezierSurface.bezierCurvesV[idx].controlPoints[i%4].x =bezierSurface.controlPoints[i].x;\r\n\t\t\t\t\tbezierSurface.bezierCurvesV[idx].controlPointsX[i%4] =bezierSurface.controlPoints[i].x;\r\n\t\t\t\t\tbezierSurface.bezierCurvesV[idx].controlPoints[i%4].y =bezierSurface.controlPoints[i].y;\r\n\t\t\t\t\tbezierSurface.bezierCurvesV[idx].controlPointsY[i%4] =bezierSurface.controlPoints[i].y;\r\n\t\t\t\t\tbezierSurface.bezierCurvesV[idx].controlPoints[i%4].z =bezierSurface.controlPoints[i].z;\r\n\t\t\t\t\tbezierSurface.bezierCurvesV[idx].controlPointsZ[i%4] =bezierSurface.controlPoints[i].z;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbezierSurface.controlPoints[i].selected = false;\r\n\t\t\t\t\tobjSelected = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tif (!objSelected) {\r\n\t\t\tsketch.orbitControl(1,1);\r\n\t\t}\r\n\t\tbezierSurface.render();\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\r\n\tfunction linspace(startValue, stopValue, cardinality) {\r\n\t\tvar arr = [];\r\n\t\tvar step = (stopValue - startValue) / (cardinality - 1);\r\n\t\tfor (var i = 0; i \u003c cardinality; i++) {\r\n\t\t\tarr.push(startValue + (step * i));\r\n\t\t}\r\n\t\treturn arr;\r\n\t}\r\n\t\r\n\tclass ConstructPoint{\r\n\t\tconstructor(x = null, y = null, z = null, isControlPoint = false) {\r\n\t\t\tthis.x = x\r\n\t\t\tthis.y = y\r\n\t\t\tthis.z = z;\r\n\t\t\tthis.selected = false; //used for moving point around\r\n\t\t\tthis.isControlPoint = isControlPoint;\r\n\t\t}\r\n\t\trender() {\r\n\t\t\tif(this.isControlPoint){\r\n\t\t\t\tsketch.push();\r\n\t\t\t\tsketch.translate(this.x,this.y,this.z);\r\n\t\t\t\tsketch.sphere(2)\r\n\t\t\t\tsketch.pop();\r\n\t\t\t}else{\r\n\t\t\t\tsketch.strokeWeight(5);\r\n\t\t\t\tsketch.beginShape(POINTS);\r\n\t\t\t\tsketch.vertex(this.x,this.y,this.z);\r\n\t\t\t\tsketch.endShape();\r\n\t\t\t}\r\n        }\r\n\t}\r\n\t\r\n\tclass BezierSurface{\r\n\t\tconstructor(points = []){\r\n\t\t\tthis.showNet = true;\r\n\t\t\tthis.showingNetPoints = true;\r\n\t\t\tthis.controlPoints = [];\r\n\t\t\tthis.u = 50;\r\n\t\t\tthis.v = 50;\r\n\t\t\tthis.bezierCurvesV = [];\r\n\t\t\tthis.bezierCurvesU = [];\r\n\t\t\t\r\n\t\t\tif(points.length != 0){\r\n\t\t\t\tfor(let i = 0;i\u003cpoints.length; i++){\r\n\t\t\t\t\tfor(let j = 0;j\u003cpoints[0].length;j++){\r\n\t\t\t\t\t\tthis.addControlPoint(points[i][j][0],points[i][j][1],points[i][j][2],true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor(let i=0;i\u003cpoints.length;i++){\r\n\t\t\t\t\tlet bz = new BezierCurve(points[i]);\r\n\t\t\t\t\tbz.showCurve = false;\r\n\t\t\t\t\tbz.changeGranularity(this.v);\r\n\t\t\t\t\tthis.bezierCurvesV.push(bz);\r\n\t\t\t\t}\r\n\t\t\t\tfor(let j=0;j\u003cthis.v;j++){\r\n\t\t\t\t\tlet bz = new BezierCurve();\r\n\t\t\t\t\tbz.changeGranularity(this.u);\r\n\t\t\t\t\tthis.bezierCurvesU.push(bz);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tshowNetPoints(){\r\n\t\t\tthis.showingNetPoints = !this.showingNetPoints;\r\n\t\t}\r\n\t\t\r\n\t\tshowNetEvent(){\r\n\t\t\tthis.showNet = !this.showNet;\r\n\t\t}\r\n  \r\n\t\taddControlPoint(x,y,z,isControlPoint = false){\r\n\t\t\tthis.controlPoints.push(new ConstructPoint(x,y,z,isControlPoint));\r\n\t\t}\r\n \r\n\t\trender(){\r\n\t\t\tfor(let i = 0; i \u003c this.controlPoints.length; i++){\r\n\t\t\t\tif(this.showingNetPoints){\r\n\t\t\t\t\tthis.controlPoints[i].render();\r\n\t\t\t\t}\r\n\t\t\t\tsketch.strokeWeight(1)\r\n\t\t\t\tlet coloumnsNumber = this.bezierCurvesV.length;\r\n\t\t\t\tif(i%coloumnsNumber != 0 \u0026\u0026 this.showNet){ \r\n\t\t\t\t\tsketch.line(this.controlPoints[i].x,this.controlPoints[i].y,this.controlPoints[i].z,this.controlPoints[i-1].x,this.controlPoints[i-1].y,this.controlPoints[i-1].z)\r\n\t\t\t\t}\r\n\t\t\t\tif(i\u003e=coloumnsNumber \u0026\u0026 this.showNet){\r\n\t\t\t\t\tsketch.line(this.controlPoints[i].x,this.controlPoints[i].y,this.controlPoints[i].z,this.controlPoints[i-coloumnsNumber].x,this.controlPoints[i-coloumnsNumber].y,this.controlPoints[i-coloumnsNumber].z)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor(let i=0;i\u003cthis.bezierCurvesV.length;i++){\r\n\t\t\t\tthis.bezierCurvesV[i].render();\r\n\t\t\t}\r\n    \r\n    \r\n\t\t\tfor(let j=0;j\u003cthis.v;j++){\r\n\t\t\t\tlet cpoints = [];\r\n\t\t\t\tfor (let k = 0; k \u003c this.bezierCurvesV[0].controlPoints.length; k++) {\r\n\t\t\t\t\tcpoints.push([this.bezierCurvesV[k].points[j][0],this.bezierCurvesV[k].points[j][1],this.bezierCurvesV[k].points[j][2]]);\r\n\t\t\t\t}\r\n\t\t\t\tthis.bezierCurvesU[j] = new BezierCurve(cpoints)\r\n\t\t\t\tthis.bezierCurvesU[j].changeGranularity(this.u);\r\n\t\t\t\tthis.bezierCurvesU[j].render();\r\n\t\t\t}\r\n\t\t}\r\n  \r\n\t}\r\n\t\r\n\tclass BezierCurve{\r\n\t\tconstructor(points = []) {\r\n\t\t\tthis.showCurve = true;\r\n\t\t\tthis.rendered = false;\r\n\t\t\tthis.controlPoints = [];\r\n\t\t\tthis.draggedControlPointIndex = -1; // by convention = -1 if we are not dragging any point\r\n\t\t\t\r\n\t\t\tthis.controlPointsX = [];\r\n\t\t\tthis.controlPointsY = [];\r\n\t\t\tthis.controlPointsZ = [];\r\n\t\t\t\r\n\t\t\tthis.granularity = 1000;\r\n\t\t\tthis.t = linspace(0,1,this.granularity);\r\n\t\t\t\r\n\t\t\tthis.points = Array(this.granularity).fill(0);\r\n\t\t\t\r\n\t\t\tthis.constructLines = [];\r\n\t\t\tthis.constructPoints = [];\r\n\t\t\tthis.controlPolygonLines = [];\r\n\t\t\t\r\n\t\t\tthis.checkedShowControlPolygon = true;\r\n\t\t\tthis.checkedShowConstructLines = true;\r\n\t\t\tthis.checkedShowCurveTrace = true;\r\n\t\t\t\r\n\t\t\tif(points.length != 0){\r\n\t\t\t  for(let i = 0;i\u003cpoints.length; i++){\r\n\t\t\t\tthis.addControlPoint(points[i][0],points[i][1],points[i][2]);\r\n\t\t\t  }\r\n\t\t\t}\r\n\t\t}\r\n   \r\n  \r\n\t\tchangeGranularity(x){\r\n\t\t\tthis.granularity = x;\r\n\t\t\tthis.t = linspace(0,1,x);\r\n\t\t\tthis.points = Array(x).fill(0);\r\n\t\t}\r\n  \r\n\t\taddControlPoint(x,y,z){\r\n\t\t\tthis.controlPoints.push(new ConstructPoint(x,y,z));\r\n\t\t\tthis.controlPointsX.push(x);\r\n\t\t\tthis.controlPointsY.push(y);\r\n\t\t\tthis.controlPointsZ.push(z);\r\n\t\t}\r\n  \r\n\t\t//calculate de casteljau algorithm\r\n\t\tcalcBezierPoint(t){\r\n    \r\n\t\t\tif(this.controlPoints.length == 0){ return null; }\r\n    \r\n\t\t\t//copy control points coordinate because with them moving, can't make \r\n\t\t\t//in place replace\r\n\t\t\tlet controlPointsXCopy = [...this.controlPointsX]; \r\n\t\t\tlet controlPointsYCopy = [...this.controlPointsY];\r\n\t\t\tlet controlPointsZCopy = [...this.controlPointsZ];\r\n\t\t\tlet k = 0; let m = 0;\r\n\t\t\tfor(let i = 0; i\u003c this.controlPoints.length-1; i++){\r\n\t\t\t\tfor(let j = 0; j\u003cthis.controlPoints.length-i-1; j++){\r\n\t\t\t\t\tcontrolPointsXCopy[j] = (1-t)*controlPointsXCopy[j] + t*controlPointsXCopy[j+1];      \r\n\t\t\t\t\tcontrolPointsYCopy[j] = (1-t)*controlPointsYCopy[j] + t*controlPointsYCopy[j+1];\r\n\t\t\t\t\tcontrolPointsZCopy[j] = (1-t)*controlPointsZCopy[j] + t*controlPointsZCopy[j+1];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn [controlPointsXCopy[0], controlPointsYCopy[0], controlPointsZCopy[0]]\r\n    \r\n\t\t}\r\n  \r\n  \r\n\t\trender(){\t\r\n\t\t\tif (this.showCurve) {\r\n\t\t\t\tsketch.beginShape(sketch.POINTS);\r\n\t\t\t\tsketch.strokeWeight(2);\r\n\t\t\t\tsketch.stroke(\"blue\");\r\n\t\t\t\tfor (let i = 0; i \u003c this.t.length; i++) {\r\n\t\t\t\t\tlet tmp = this.calcBezierPoint(this.t[i]);\r\n\t\t\t\t\tif (tmp != null) {\r\n\t\t\t\t\t\tsketch.vertex(tmp[0], tmp[1], tmp[2]);\r\n\t\t\t\t\t\tthis.points[i] = [tmp[0], tmp[1], tmp[2]];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tsketch.stroke(0)\r\n\t\t\t\tsketch.endShape();\r\n\t\t\t}else{\r\n\t\t\t\tfor (let i = 0; i \u003c this.t.length; i++) {\r\n\t\t\t\t\tlet tmp = this.calcBezierPoint(this.t[i]);\r\n\t\t\t\t\tif (tmp != null) {\r\n\t\t\t\t\t\tthis.points[i] = [tmp[0], tmp[1], tmp[2]];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tsketch.windowResized = function(){ \r\n\t\tlet width = document.getElementById(\"forWidth\").offsetWidth;\r\n\t\tsketch.resizeCanvas(width,sketch.widowHeight/1.6);\r\n\t}\r\n\t\r\n\tlet clickNum = 0;\r\n\tfunction leftClick(){\r\n\t\tclickNum += 1;\r\n\t\tif(clickNum == 1){\r\n\t\t\tbezierSurface.showNetEvent();\r\n\t\t}\r\n\t\tif(clickNum == 2){\r\n\t\t\tbezierSurface.showNetPoints();\r\n\t\t\tclickNum = 0;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t// Rotation matrix for rotation about x-axis\r\n\tfunction Rx(th) {\r\n\t\treturn math.matrix([[1, 0, 0],\r\n                 [0, sketch.cos(th), -sketch.sin(th)],\r\n                 [0, sketch.sin(th), sketch.cos(th)]]);\r\n\t}\r\n\r\n\t// Rotation matrix for rotation about y-axis\r\n\tfunction Ry(th) {\r\n\t\treturn math.matrix([[sketch.cos(th), 0, -sketch.sin(th)],\r\n                 [0, 1, 0],\r\n                 [sketch.sin(th), 0, sketch.cos(th)]]);\r\n\t}\r\n  \r\n\t// Rotation matrix for rotation about z-axis\r\n\tfunction Rz(th) {\r\n\t\treturn math.matrix([[sketch.cos(th), sketch.sin(th), 0],\r\n                [-sketch.sin(th), sketch.cos(th), 0],\r\n                [0, 0, 1]]);\r\n\t}\r\n\t\r\n\t\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nnew p5(sixthSketch,\"sixthCanvas\");\r\n\r\n\r\n\u003c/script\u003e\r\n\u003c/p\u003e\n\r\n \r\n\r\n\r\n\u003cstyle\u003e\r\n\r\n  .checkbox-wrapper-6 .tgl {\r\n    display: none;\r\n  }\r\n  .checkbox-wrapper-6 .tgl,\r\n  .checkbox-wrapper-6 .tgl:after,\r\n  .checkbox-wrapper-6 .tgl:before,\r\n  .checkbox-wrapper-6 .tgl *,\r\n  .checkbox-wrapper-6 .tgl *:after,\r\n  .checkbox-wrapper-6 .tgl *:before,\r\n  .checkbox-wrapper-6 .tgl + .tgl-btn {\r\n    box-sizing: border-box;\r\n  }\r\n  .checkbox-wrapper-6 .tgl::-moz-selection,\r\n  .checkbox-wrapper-6 .tgl:after::-moz-selection,\r\n  .checkbox-wrapper-6 .tgl:before::-moz-selection,\r\n  .checkbox-wrapper-6 .tgl *::-moz-selection,\r\n  .checkbox-wrapper-6 .tgl *:after::-moz-selection,\r\n  .checkbox-wrapper-6 .tgl *:before::-moz-selection,\r\n  .checkbox-wrapper-6 .tgl + .tgl-btn::-moz-selection,\r\n  .checkbox-wrapper-6 .tgl::selection,\r\n  .checkbox-wrapper-6 .tgl:after::selection,\r\n  .checkbox-wrapper-6 .tgl:before::selection,\r\n  .checkbox-wrapper-6 .tgl *::selection,\r\n  .checkbox-wrapper-6 .tgl *:after::selection,\r\n  .checkbox-wrapper-6 .tgl *:before::selection,\r\n  .checkbox-wrapper-6 .tgl + .tgl-btn::selection {\r\n    background: none;\r\n  }\r\n  .checkbox-wrapper-6 .tgl + .tgl-btn {\r\n    outline: 0;\r\n    display: block;\r\n    width: 4em;\r\n    height: 2em;\r\n    position: relative;\r\n    cursor: pointer;\r\n    -webkit-user-select: none;\r\n       -moz-user-select: none;\r\n        -ms-user-select: none;\r\n            user-select: none;\r\n  }\r\n  .checkbox-wrapper-6 .tgl + .tgl-btn:after,\r\n  .checkbox-wrapper-6 .tgl + .tgl-btn:before {\r\n    position: relative;\r\n    display: block;\r\n    content: \"\";\r\n    width: 50%;\r\n    height: 100%;\r\n  }\r\n  .checkbox-wrapper-6 .tgl + .tgl-btn:after {\r\n    left: 0;\r\n  }\r\n  .checkbox-wrapper-6 .tgl + .tgl-btn:before {\r\n    display: none;\r\n  }\r\n  .checkbox-wrapper-6 .tgl:checked + .tgl-btn:after {\r\n    left: 50%;\r\n  }\r\n\r\n  .checkbox-wrapper-6 .tgl-light + .tgl-btn {\r\n    background: #f0f0f0;\r\n    border-radius: 2em;\r\n    padding: 2px;\r\n    transition: all 0.4s ease;\r\n  }\r\n  .checkbox-wrapper-6 .tgl-light + .tgl-btn:after {\r\n    border-radius: 50%;\r\n    background: #fff;\r\n    transition: all 0.2s ease;\r\n  }\r\n  .checkbox-wrapper-6 .tgl-light:checked + .tgl-btn {\r\n    background: #0000fe;\r\n  }\r\n  \r\n\r\ncanvas {\r\n\r\n  border-radius: 30px;\r\n}\r\n\r\n\r\n.myslider {\r\n  -webkit-appearance: none;\r\n  width: 100%;\r\n  height: 15px;\r\n  border-radius: 5px;  \r\n  background: #d3d3d3;\r\n  outline: none;\r\n  opacity: 0.7;\r\n  -webkit-transition: .2s;\r\n  transition: opacity .2s;\r\n}\r\n\r\n.myslider::-webkit-slider-thumb {\r\n  -webkit-appearance: none;\r\n  appearance: none;\r\n  width: 25px;\r\n  height: 25px;\r\n  border-radius: 50%; \r\n  background: #0000fe;\r\n  cursor: pointer;\r\n}\r\n\r\n.myslider::-moz-range-thumb {\r\n  width: 25px;\r\n  height: 25px;\r\n  border-radius: 50%;\r\n  background: #0000fe;\r\n  cursor: pointer;\r\n}\r\n\r\n.button {\r\n  background-color: #0000fe;\r\n  border: none;\r\n  color: white;\r\n  padding: 20px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  margin: 4px 2px;\r\n  cursor: pointer;\r\n}\r\n.button2 {border-radius: 8px;}\r\n\r\n\u003c/style\u003e\r\n\r\n\n\u003ch1 id=\"note-sullimplementazione-in-p5js\"\u003eNote sull\u0026rsquo;implementazione in p5js\u003c/h1\u003e\n\u003cp\u003eIl codice è scritto con la libreria \u003ca href=\"https://p5js.org/es/\"\u003ep5js\u003c/a\u003e ed è stato scritto con metodologia OOP.\nIn generale tutte le versioni 2d-3d e anche Bézier patch si compongono delle seguenti classi e metodi:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eBezierCurve\u003c/span\u003e{\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003econstructor\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003epoints\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e Array[Array[\u003cspan style=\"color:#66d9ef\"\u003efloat\u003c/span\u003e]]){}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eaddControlPoint\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003ex\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efloat\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003ey\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efloat\u003c/span\u003e){}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003edeCastelJau\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003et\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efloat\u003c/span\u003e){}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003erender\u003c/span\u003e(){\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t\u003cspan style=\"color:#75715e\"\u003e//ConstructPoints.render() for all ConstructPoints\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\t\u003cspan style=\"color:#75715e\"\u003e//ConstructLines.render() for all ConstructLines\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eConstructPoint\u003c/span\u003e{\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003econstructor\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003ex\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efloat\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003ey\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efloat\u003c/span\u003e) {}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003erender\u003c/span\u003e() {}  \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ehasInside\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003ex\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efloat\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003ey\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efloat\u003c/span\u003e) {}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eConstructLine\u003c/span\u003e{  \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003econstructor\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003ep1\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eConstructPoint\u003c/span\u003e,\u003cspan style=\"color:#a6e22e\"\u003ep2\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eConstructPoint\u003c/span\u003e) {}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003erender\u003c/span\u003e(){}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ePer creare dunque una curva di Bézier è necessario istanziare una \u003ccode\u003evar bezierCurve = BezierCurve(points)\u003c/code\u003e, poi sul metodo \u003ccode\u003edraw()\u003c/code\u003e di p5js richiamare il metodo render della curva in questo modo: \u003ccode\u003ebezierCurve.render()\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003ePer le Bézier patch invece è stata creata una classe aggiuntiva che istanzia più classi BezierCurve.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eBezierPatch\u003c/span\u003e{\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003econstructor\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003epoints\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e Array[Array[\u003cspan style=\"color:#66d9ef\"\u003efloat\u003c/span\u003e]]){}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eaddControlPoint\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003ex\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efloat\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003ey\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efloat\u003c/span\u003e){}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003erender\u003c/span\u003e(){}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","description":"","image":"/projects/bezier/copertina8.png","permalink":"/it/progetti/bezier/","title":"Bézier curves and patches - interactive visualization"},{"content":"\u003ch1 id=\"introduzione\"\u003eIntroduzione\u003c/h1\u003e\n\u003cp\u003eL\u0026rsquo;obiettivo di questo progetto è quello di sviluppare un\u0026rsquo;alternativa più economica ai sistemi di telemetria disponibili sul mercato per le mountain bike.\u003c/p\u003e\n\u003cp\u003eI sistemi di telemetria per le mountain bike consentono di monitorare e acquisire dati sulla posizione della forcella e dell\u0026rsquo;ammortizzatore della bici durante la guida.\u003c/p\u003e\n\u003cp\u003eQuesti dati sono fondamentali per gli appassionati e gli atleti professionisti, in quanto forniscono informazioni preziose per analizzare e migliorare le prestazioni.\u003c/p\u003e\n\u003cp\u003eAttualmente, molti sistemi di telemetria, come ad esempio \u003ca href=\"https://www.bybtech.it/\"\u003ebyb telemetry\u003c/a\u003e, utilizzano costosi potenziometri lineari per misurare con precisione la posizione della forcella e dell\u0026rsquo;ammortizzatore.\u003c/p\u003e\n\u003cp\u003eAltri utenti su internet hanno provato altri modi per ottenere un buon risultato, per esempio un \u003ca href=\"https://www.vitalmtb.com/forums/The-Hub,2/DIY-mtb-telemetry-data,11126\"\u003esensore LiDar\u003c/a\u003e, con dei risultati però non troppo incoraggianti, in quanto sensori troppo affetti da rumore indesiderato.\u003c/p\u003e\n\u003cp\u003eDunque ho concluso che l\u0026rsquo;utilizzo di un encoder rotativo rappresenta un\u0026rsquo;alternativa più vantaggiosa dal punto di vista economico.\u003c/p\u003e\n\u003cp\u003eLa ragione principale di questa scelta è che gli encoder rotativi sono meno costosi rispetto ai potenziometri lineari e offrono comunque una buona precisione nella misurazione della posizione. Inoltre, gli encoder rotativi sono generalmente più robusti e meno soggetti a danni rispetto agli encoder lineari, che possono essere più fragili e suscettibili a guasti.\u003c/p\u003e\n\u003ch3 id=\"come-funziona-un-encoder-rotativo\"\u003ecome funziona un encoder rotativo\u003c/h3\u003e\n\u003cp\u003eGli encoder possono rilevare il movimento in entrambe le direzioni, rilevando i fori o i segni che passano attraverso 2 posizioni. Quando il disco blu nel diagramma sottostante gira in senso orario, i cambiamenti vengono rilevati prima dal pin 1 e poi dal pin 2. Quando gira in senso antiorario, il pin 2 è il primo a rilevare i cambiamenti. Questo schema è chiamato \u0026ldquo;codifica in quadratura\u0026rdquo; perché le forme d\u0026rsquo;onda rilevate dai due pin sono sfasate di 90 gradi.\u003c/p\u003e\n\r\n \r\n\u003ccenter\u003e\r\n\u003ctable class=\"d-flex justify-content-center\"\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003ctd style=\"background: none !important; border: none !important\"\u003e\r\n\t\t\t\u003cimg src=\"/projects/forktelemetry/td_libs_Encoder_pos1.png\" id=\"quad\"\u003e\r\n\t\t\u003c/td\u003e\r\n\t\u003c/tr\u003e\r\n\t\u003ctr\u003e\r\n\t\t\u003ctd align=\"center\" style=\"background: none !important; border: none !important\"\u003e\r\n\t\t\t\u003cform action=\"#\"\u003e\r\n\t\t\t\t\u003cinput type=\"submit\" value=\"\u003c- antiorario\" onClick=\"rotate(-1); return false\"\u003e\r\n\t\t\t\t\u003cinput type=\"text\" value=\"0\" id=\"accum\" size=6\u003e\r\n\t\t\t\t\u003cinput type=\"submit\" value=\"orario -\u003e\" onClick=\"rotate(1); return false\"\u003e\r\n\t\t\t\u003c/form\u003e\r\n\t\t\u003c/td\u003e\r\n\t\u003c/tr\u003e\r\n\u003c/table\u003e\r\n\u003c/center\u003e\r\n\u003cscript\u003e\r\nvar img = new Array();\r\nimg[0] = new Image();\r\nimg[1] = new Image();\r\nimg[2] = new Image();\r\nimg[3] = new Image();\r\nimg[0].src = \"/projects/forktelemetry/td_libs_Encoder_pos1.png\";\r\nimg[1].src = \"/projects/forktelemetry/td_libs_Encoder_pos2.png\";\r\nimg[2].src = \"/projects/forktelemetry/td_libs_Encoder_pos3.png\";\r\nimg[3].src = \"/projects/forktelemetry/td_libs_Encoder_pos4.png\";\r\nvar position = 0;\r\nfunction rotate(n) {\r\nval = Number(document.getElementById('accum').value) + n;\r\nif (isNaN(val)) val = 0;\r\ndocument.getElementById('accum').value = val;\r\nposition += n;\r\nif (position \u003e 3) position = 0;\r\nif (position \u003c 0) position = 3;\r\ndocument.getElementById('quad').src = img[position].src;\r\n}\r\n\u003c/script\u003e\r\n\n\u003cp\u003e(animazione presa da \u003ca href=\"https://www.pjrc.com/teensy/td_libs_Encoder.html\"\u003equesto sito\u003c/a\u003e)\u003c/p\u003e\n\u003ch1 id=\"pre---prototipazione\"\u003epre - prototipazione\u003c/h1\u003e\n\u003cp\u003ePrima di procedere con la prototipazione del sensore della forcella ho eseguito un\u0026rsquo;analisi di fattibilità per valutare la possibilità di realizzare questo progetto.\u003c/p\u003e\n\u003cp\u003eCome punto di partenza ho selezionato un encoder rotativo: l\u0026rsquo;LPD3806. Questo tipo di encoder offre una risoluzione di 600 PPR (pulses per revolution). Utilizzando una puleggia con un diametro di 9,4 mm, si ottiene una densità di circa 30 rilevazioni per millimetro di movimento della forcella. Questo perché l\u0026rsquo;encoder genera un segnale di quadratura che può essere letto sia sul fronte di salita che su quello di discesa. Sfruttando entrambi i fronti, otteniamo una risoluzione quadruplicata dell\u0026rsquo;encoder, ovvero 24000 PPR (600 PPR * 4).\u003c/p\u003e\n\u003cp\u003eCalcolando il numero di osservazioni possibili per ogni millimetro di movimento della forcella, otteniamo il seguente risultato:\u003c/p\u003e\n\u003cp\u003e$$ \\frac{600 * 4}{\\pi* 9.4} \\approx 30 $$\u003c/p\u003e\n\u003cp\u003eAd esempio, considerando una forcella di 150 mm di escursione, si avranno circa 12190 rilevazioni (questo valore sarà utilizzato nel codice in seguito).\u003c/p\u003e\n\u003cp\u003eÈ importante notare che aumentando il diametro della puleggia accoppiata all\u0026rsquo;encoder, si riduce la densità di rilevazioni per millimetro di movimento. Inoltre, bisogna considerare la velocità massima di risposta dell\u0026rsquo;encoder, la quale determina la velocità lineare massima che la forcella può raggiungere. Nel caso dell\u0026rsquo;LPD3806, la velocità massima è di:\u003c/p\u003e\n\u003cp\u003e​$$ 2000 RPM = 2000/60 RPS = $$\n$$ 2000* (\\pi*9.4) /60 \\frac{mm}{s} \\approx 983 \\frac{mm}{s} $$\u003c/p\u003e\n\u003cp\u003eSe si utilizza una puleggia con un diametro ridotto, si otterrà una velocità lineare massima rilevabile inferiore.\u003c/p\u003e\n\u003cp\u003eCon queste informazioni iniziali, ho dunque iniziato il processo di prototipazione.\u003c/p\u003e\n\u003ch1 id=\"prototipazione\"\u003eprototipazione\u003c/h1\u003e\n\u003cp\u003ePer la prototipazione del sensore della forcella, ho utilizzato il software \u003ca href=\"https://www.autodesk.it/products/fusion-360/overview\"\u003efusion 360\u003c/a\u003e. Dopo diverse iterazioni, sono giunto al seguente risultato:\u003c/p\u003e\n\r\n \r\n\u003ccenter\u003e\r\n\u003cimg src=\"/projects/forktelemetry/forkSensor.jpg\"  width=\"80%\" \u003e\r\n\u003c/center\u003e\r\n\n\r\n \r\n\u003cscript type=\"module\" src=\"/model-viewer.min.js\"\u003e\u003c/script\u003e\r\n\u003ccenter\u003e\r\n\u003cmodel-viewer style=\"width: 80; height: 80vh\" src=\"/projects/forktelemetry/forksensor3d.glb\" ar ar-modes=\"webxr scene-viewer quick-look\" camera-controls poster=\"/projects/forktelemetry/forkSensor3dPoster.webp\" shadow-intensity=\"1\" autoplay camera-orbit=\"-38.89deg 61.4deg 644.1m\" field-of-view=\"30deg\"\u003e\r\n    \u003cdiv class=\"progress-bar hide\" slot=\"progress-bar\"\u003e\r\n        \u003cdiv class=\"update-bar\"\u003e\u003c/div\u003e\r\n    \u003c/div\u003e\r\n\u003c/model-viewer\u003e\r\n\u003c/center\u003e\r\n\n\u003cp\u003eIl file fusion360 è disponibile su GitHub a \u003ca href=\"https://github.com/giggiox/fork-telemetry/tree/main/fusio360files/v1\"\u003equesto link\u003c/a\u003e.\nUtilizzando \u003ca href=\"https://www.blender.org/\"\u003eblender\u003c/a\u003e possiamo anche far vedere un concept di come funziona una volta montato su una forcella.\u003c/p\u003e\n\r\n \r\n\u003ccenter\u003e\r\n\u003cmodel-viewer style=\"width: 80; height: 80vh\" src=\"/projects/forktelemetry/forksensorAnimation.glb\" ar ar-modes=\"webxr scene-viewer quick-look\" camera-controls poster=\"/projects/forktelemetry/forkSensorAnimationPoster.webp\" shadow-intensity=\"1\" autoplay camera-orbit=\"-216.6deg 65.99deg 1356m\" field-of-view=\"30deg\"\u003e\r\n    \u003cdiv class=\"progress-bar hide\" slot=\"progress-bar\"\u003e\r\n        \u003cdiv class=\"update-bar\"\u003e\u003c/div\u003e\r\n    \u003c/div\u003e\r\n\u003c/model-viewer\u003e\r\n\u003c/center\u003e\r\n\n\u003cp\u003ePer il design, mi sono ispirato al movimento degli assi di una stampante 3D e ho integrato un meccanismo di tensionamento della cinghia, tipico di questo tipo di stampanti.\u003c/p\u003e\n\u003cp\u003eSuccessivamente, ho utilizzato Arduino Nano per realizzare un Proof of Concept (POC) funzionante. Nel complesso, il sistema è composto da 2 switch, 1 modulo SD, 1 Arduino Nano, 1 batteria da 9 volt e l\u0026rsquo;encoder LPD3806.\nDove:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003euno switch serve per accendere il sistema\u003c/li\u003e\n\u003cli\u003el\u0026rsquo;altro switch abilita la scrittura della posizione dell\u0026rsquo;encoder con la codifica scelta ( [posizione_encoder,]) nella scheda SD. Questo switch dovrà essere attiviato prima dell\u0026rsquo;inizio della discesa e spento subito dopo.\u003c/li\u003e\n\u003c/ul\u003e\n\r\n \r\n\u003ccenter\u003e\r\n\u003cimg src=\"/projects/forktelemetry/forktelemetry-schematics.png\"  width=\"60%\" \u003e\r\n\u003c/center\u003e\r\n\n\u003cp\u003eA questo punto, ho progettato anche una scatola di acquisizione utilizzando Fusion 360.\n\r\n \r\n\u003ccenter\u003e\r\n\u003cimg src=\"/projects/forktelemetry/openbox_fusion.PNG\"  width=\"80%\" \u003e\r\n\u003c/center\u003e\r\n\nLa scatola, che è disegnata in modo da essere fissata con 2 fascette al tubo superiore della bici, contiene tutti i componenti (tranne l\u0026rsquo;encoder) e rende accessibile dall\u0026rsquo;esterno i 2 switch.\n\r\n \r\n\u003ccenter\u003e\r\n\u003cimg src=\"/projects/forktelemetry/box_fusion.PNG\"  width=\"80%\" \u003e\r\n\u003c/center\u003e\r\n\u003c/p\u003e\n\u003ch1 id=\"stampa-e-codice\"\u003estampa e codice\u003c/h1\u003e\n\u003cp\u003eUna volta stampato (e assemblato) il sensore e la scatola di acquisizione saldando i componenti su una millefori\u003c/p\u003e\n\r\n \r\n\u003ccenter\u003e\r\n\u003cimg src=\"/projects/forktelemetry/collage.png\"  width=\"80%\" \u003e\r\n\u003c/center\u003e\r\n\n\u003cp\u003eil tutto si presenta in questo modo:\u003c/p\u003e\n\r\n \r\n\u003ccenter\u003e\r\n\u003cimg src=\"/projects/forktelemetry/laydown.jpg\"  width=\"80%\" \u003e\r\n\u003c/center\u003e\r\n\n\u003cp\u003eIl funzionamento una volta montati sulla MTB è il seguente:\u003c/p\u003e\n\r\n \r\n\u003ccenter\u003e\r\n\u003cvideo width=35% controls\u003e\r\n    \u003csource src=\"/projects/forktelemetry/video.mp4\" type=\"video/mp4\" \u003e\r\n    Your browser does not support the video tag.  \r\n\u003c/video\u003e\r\n\u003c/center\u003e\r\n\n\u003cp\u003eIl codice invece è il seguente.\nNotare che per avere una massima velocità in lettura dell\u0026rsquo;encoder si è utilizzata la tecnica della manipolazione delle porte.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-cpp\" data-lang=\"cpp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#include\u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e\u0026lt;SPI.h\u0026gt;\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#include\u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e\u0026lt;SD.h\u0026gt;\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#include\u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e\u0026lt;String.h\u0026gt;\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#define encoderPinA 3\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#define encoderPinB 2\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#define buttonPin 7\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#define SD_PIN 10\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eFile logFile;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003ebool\u003c/span\u003e enableWriteToSD\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003efalse;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e newDirectoryName\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e newFileName\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003ebool\u003c/span\u003e startRecord;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003evolatile\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003elong\u003c/span\u003e encoderPosition\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003evolatile\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003ebool\u003c/span\u003e aStatePrev,bStatePrev,aState,bState;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esetup\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  Serial.begin(\u003cspan style=\"color:#ae81ff\"\u003e9600\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#75715e\"\u003e//setup rotary encoder\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e  DDRD \u003cspan style=\"color:#f92672\"\u003e\u0026amp;=\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e~\u003c/span\u003e((\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e encoderPinA) \u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e (\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e encoderPinB));\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#75715e\"\u003e// Abilita i pull-up interni\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e  PORTD \u003cspan style=\"color:#f92672\"\u003e|=\u003c/span\u003e (\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e encoderPinA) \u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e (\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e encoderPinB);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  attachInterrupt(digitalPinToInterrupt(encoderPinA),handleEncoderInterrupt,CHANGE);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  attachInterrupt(digitalPinToInterrupt(encoderPinB),handleEncoderInterrupt,CHANGE);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#75715e\"\u003e//setup SD\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e  \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e(\u003cspan style=\"color:#f92672\"\u003e!\u003c/span\u003eSD.begin(SD_PIN)){ \u003cspan style=\"color:#66d9ef\"\u003ewhile\u003c/span\u003e(true); }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003ewhile\u003c/span\u003e(SD.exists(String(newDirectoryName))){ newDirectoryName\u003cspan style=\"color:#f92672\"\u003e++\u003c/span\u003e; }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e (SD.mkdir(String(newDirectoryName))){\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    Serial.print(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Created new directory: \u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    Serial.println(newDirectoryName);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#75715e\"\u003e//setup record button\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e  DDRD \u003cspan style=\"color:#f92672\"\u003e\u0026amp;=\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e~\u003c/span\u003e(\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e buttonPin);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  PORTD \u003cspan style=\"color:#f92672\"\u003e|=\u003c/span\u003e (\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e buttonPin);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  Serial.println(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;setup completed\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eloop\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  startRecord\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003ePIND\u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u003c/span\u003e(\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u0026lt;\u003c/span\u003ebuttonPin);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e(startRecord \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e!\u003c/span\u003eenableWriteToSD){\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    logFile \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e SD.open(String(newDirectoryName) \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e  String(newFileName\u003cspan style=\"color:#f92672\"\u003e++\u003c/span\u003e) \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;.txt\u0026#34;\u003c/span\u003e, FILE_WRITE);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e (logFile) { Serial.println(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Writing to \u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e String(newFileName\u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e)); }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    enableWriteToSD\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003etrue;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003eelse\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e(startRecord \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e enableWriteToSD) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e     logFile.print(String(encoderPosition)\u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;,\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003eelse\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e(\u003cspan style=\"color:#f92672\"\u003e!\u003c/span\u003estartRecord \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e enableWriteToSD){\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    enableWriteToSD\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003efalse;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    logFile.close();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ehandleEncoderInterrupt\u003c/span\u003e(){\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#75715e\"\u003e// Leggi lo stato corrente dei segnali A e B\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e  aState \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e PIND \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u003c/span\u003e (\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e encoderPinA);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  bState \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e PIND \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u003c/span\u003e (\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e encoderPinB);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#75715e\"\u003e// Verifica se il fronte di salita è avvenuto sul segnale A\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e  \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e (aState \u003cspan style=\"color:#f92672\"\u003e!=\u003c/span\u003e aStatePrev) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    aStatePrev \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e aState;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e// Verifica il cambiamento di direzione dell\u0026#39;encoder\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e (aStatePrev \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e bStatePrev) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      encoderPosition\u003cspan style=\"color:#f92672\"\u003e--\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    } \u003cspan style=\"color:#66d9ef\"\u003eelse\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      encoderPosition\u003cspan style=\"color:#f92672\"\u003e++\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#75715e\"\u003e// Memorizza lo stato corrente dei segnali A e B per il prossimo interrupt\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e  bStatePrev \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e bState;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch1 id=\"primi-test-e-risultati\"\u003eprimi test e risultati\u003c/h1\u003e\n\u003cp\u003eQuando si attiva lo switch, il codice inizia a registrare la posizione dell’encoder e la salva in un file di log nella sua cartella. Il file di log contiene i valori della posizione dell’encoder separati da virgole.\u003c/p\u003e\n\u003cp\u003eHo creato un sito web in javascript che usa la libreria \u003ca href=\"https://plotly.com/javascript/\"\u003ePlotly JS\u003c/a\u003e per mostrare questi dati (\u003ca href=\"https://github.com/giggiox/fork-telemetry/tree/main/web\"\u003eLink GitHub al codice del sito\u003c/a\u003e). Ad esempio, il video che ho mostrato prima produce un file di log che può essere aperto nel sito e genera questo output:\u003c/p\u003e\n\r\n \r\n\u003ccenter\u003e\r\n\u003cimg src=\"/projects/forktelemetry/plot.png\"  width=\"80%\" \u003e\r\n\u003c/center\u003e\r\n\n\u003cp\u003eNello scatter plot si vede il numero del campionamento sulle ascisse e la compressione della forca in millimetri sulle ordinate.\u003c/p\u003e\n\u003cp\u003eSotto il grafico ci sono anche dei dati in tabella che indicano il numero di bottom out registrati (qui nessuno), il valore più frequente di compressione della forca e la percentuale di forca utilizzata (qui oltre 26 mm su una forca di 150 mm, cioè circa il 18%).\u003c/p\u003e\n\u003ch3 id=\"visualizzazione-telemetria-a-video\"\u003evisualizzazione telemetria a video\u003c/h3\u003e\n\u003cp\u003eHo realizzato anche uno script python (\u003ca href=\"https://github.com/giggiox/fork-telemetry/blob/main/videoEdit.ipynb\"\u003eLink GitHub allo script\u003c/a\u003e) che si basa su \u003ca href=\"https://pypi.org/project/Pillow/\"\u003ePillow\u003c/a\u003e e \u003ca href=\"https://pypi.org/project/opencv-python/\"\u003ecv2\u003c/a\u003e.\nQuesto script permette di inserire la telemetria rilevata su un video, che per il video che ho mostrato prima, produce un effetto simile a questo:\u003c/p\u003e\n\r\n \r\n\u003ccenter\u003e\r\n\u003cvideo width=35% controls\u003e\r\n    \u003csource src=\"/projects/forktelemetry/videoTelemetry.mp4\" type=\"video/mp4\" \u003e\r\n    Your browser does not support the video tag.  \r\n\u003c/video\u003e\r\n\u003c/center\u003e\r\n\n\u003cp\u003eQuesto script crea prima 101 immagini del rettangolo con la percentuale scritta dentro (da 0% a 100%). Poi mette insieme queste immagini in un video dove ogni immagine rappresenta un valore misurato dal sensore.\u003c/p\u003e\n\u003ch1 id=\"test-sul-campo\"\u003etest sul campo\u003c/h1\u003e\n\u003cp\u003eQuando ho testato il sistema su una discesa reale di enduro, ho incontrato le prime difficoltà e restrizioni dell’hardware che ho usato (soprattutto dell’arduino). Infatti se gli urti sono troppo veloci, il conteggio degli impulsi che arrivano dall’encoder comincia a \u0026ldquo;driftare\u0026rdquo; e diventare sempre più negativo.\u003c/p\u003e\n\r\n \r\n\u003ccenter\u003e\r\n\u003cimg src=\"/projects/forktelemetry/testSulCampo.PNG\"  width=\"80%\" \u003e\r\n\u003c/center\u003e\r\n\n\u003cp\u003eQuesto perchè la frequenza dell’encoder che va da 0 a 20KHz.\nQuesto implica che tra un fronte di salita e un altro ci sono almeno 50 microsecondi di intervallo.\nSupponendo di leggere solo i fronti di salita del segnale A (quindi abbassando la stima della precisione fatta prima di un quarto) l’arduino non riesce comunque a fare in questo breve tempo tutte le operazioni necessarie.\nInfatti dovrebbe\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003efare una \u003ccode\u003edigitalRead()\u003c/code\u003e sul pin del segnale B\u003c/li\u003e\n\u003cli\u003escrivere sull\u0026rsquo;SD la posizione\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNelle 2 successive cerco di esaminare il codice e spiegare perchè l’arduino non è l\u0026rsquo;hardware corretto per procedere.\u003c/p\u003e\n\u003ch2 id=\"digitalread\"\u003edigitalRead\u003c/h2\u003e\n\u003cp\u003ePer esempio guardiamo quanto tempo prende una digitalRead() usando la manipolazione delle porte.\nPossiamo per esempio prendere questo codice arduino che fa una digitalRead() dell\u0026rsquo;encoderPinB e se risulta HIGH allora aggiunge 1 all\u0026rsquo;encoderPosition, altrimenti diminusice di 1 la variabile.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-cpp\" data-lang=\"cpp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ehandleEncoderInterrupt\u003c/span\u003e(){\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#75715e\"\u003e// Leggi lo stato corrente del segnale B\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e  PIND \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u003c/span\u003e (\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e encoderPinB) \u003cspan style=\"color:#f92672\"\u003e?\u003c/span\u003e encoderPosition \u003cspan style=\"color:#f92672\"\u003e+=\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e encoderPosition \u003cspan style=\"color:#f92672\"\u003e-=\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ee decompilarlo \u003ccode\u003eC:\\Users\\luigi\\AppData\\Local\\Temp\\arduino_build_211859\u0026gt;\u0026quot;C:\\Program Files (x86)\\Arduino\\hardware\\tools\\avr\\bin\\avr-objdump.exe\u0026quot; -S codice_test.ino.elf\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eottenendo\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-assembly\" data-lang=\"assembly\"\u003ea8:   4a 9b           sbis    0x09, 2 ; 9\r\naa:   0c c0           rjmp    .+24            ; 0xc4 \u0026lt;_Z22handleEncoderInterruptv+0x1c\u0026gt;\r\nac:   80 91 04 01     lds     r24, 0x0104     ; 0x800104 \u0026lt;__data_end\u0026gt;\r\nb0:   90 91 05 01     lds     r25, 0x0105     ; 0x800105 \u0026lt;__data_end+0x1\u0026gt;\r\nb4:   a0 91 06 01x     lds     r26, 0x0106     ; 0x800106 \u0026lt;__data_end+0x2\u0026gt;\r\nb8:   b0 91 07 01     lds     r27, 0x0107     ; 0x800107 \u0026lt;__data_end+0x3\u0026gt;\r\nbc:   01 96           adiw    r24, 0x01       ; 1\r\nbe:   a1 1d           adc     r26, r1\r\nc0:   b1 1d           adc     r27, r1\r\nc2:   0b c0           rjmp    .+22            ; 0xda \u0026lt;_Z22handleEncoderInterruptv+0x32\u0026gt;\r\nc4:   80 91 04 01     lds     r24, 0x0104     ; 0x800104 \u0026lt;__data_end\u0026gt;\r\nc8:   90 91 05 01     lds     r25, 0x0105     ; 0x800105 \u0026lt;__data_end+0x1\u0026gt;\r\ncc:   a0 91 06 01     lds     r26, 0x0106     ; 0x800106 \u0026lt;__data_end+0x2\u0026gt;\r\nd0:   b0 91 07 01     lds     r27, 0x0107     ; 0x800107 \u0026lt;__data_end+0x3\u0026gt;\r\nd4:   01 97           sbiw    r24, 0x01       ; 1\r\nd6:   a1 09           sbc     r26, r1\r\nd8:   b1 09           sbc     r27, r1\r\nda:   80 93 04 01     sts     0x0104, r24     ; 0x800104 \u0026lt;__data_end\u0026gt;\r\nde:   90 93 05 01     sts     0x0105, r25     ; 0x800105 \u0026lt;__data_end+0x1\u0026gt;\r\ne2:   a0 93 06 01     sts     0x0106, r26     ; 0x800106 \u0026lt;__data_end+0x2\u0026gt;\r\ne6:   b0 93 07 01     sts     0x0107, r27     ; 0x800107 \u0026lt;__data_end+0x3\u0026gt;\r\nea:   08 95           ret\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIn particolare le istruzioni che fanno la lettura digitale dell\u0026rsquo;encoderPinB sono dalla 2a alla 6a, ovvero le 4 istruzioni che utilizzano \u003ccode\u003elds\u003c/code\u003e (Load direct from SRAM).\nDal \u003ca href=\"https://ww1.microchip.com/downloads/en/DeviceDoc/Atmel-7810-Automotive-Microcontrollers-ATmega328P_Datasheet.pdf\"\u003edatasheet dell\u0026rsquo;ATmega328 (pagina 283)\u003c/a\u003e possiamo vedere che queste istruzioni prendono esattamente 2 cicli di clock.\u003c/p\u003e\n\r\n \r\n\u003ccenter\u003e\r\n\u003cimg src=\"/projects/forktelemetry/datasheet.PNG\"  width=\"80%\" \u003e\r\n\u003c/center\u003e\r\n\n\u003cp\u003eDunque essendo un microcontrollore a 16Mhz (1 ciclo di clock richiede 1/16.000.000 di secondo, cioè 62,5 nanosecondi), allora quelle 4 istruzioni richiedono 8 cicli  * 62,5 ns/ciclo = 500 ns.\u003c/p\u003e\n\u003cp\u003eDa questa analisi è possibile dedurre che la digitalRead() non è il collo di bottiglia nel codice.\u003c/p\u003e\n\u003ch2 id=\"scrittura-sd\"\u003escrittura SD\u003c/h2\u003e\n\u003cp\u003eGuardiamo invece quanto tempo impiega una scrittura sull\u0026rsquo;SD, per avere un numero più o meno approssimativo possiamo per esempio stampare il numero di millisecondi prima e dopo l\u0026rsquo;esecuzione della scritura della posizione nella memoria.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-cpp\" data-lang=\"cpp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eSerial.println(millis());\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003elogFile.print(String(encoderPosition)\u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;,\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eSerial.println(millis());\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eE possiamo vedere che effettivamente il collo di bottiglia è  proprio in questa chiamata che può arrivare a prendere anche 200 millisecondi. Ovviamente questo tempo dipende anche dall\u0026rsquo;SD utilizzata.\u003c/p\u003e\n\u003ch1 id=\"sviluppi-futuri\"\u003esviluppi futuri\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eutilizzare un microcontrollore con più core, ad esempio un esp32 dove un core si occupa della lettura del segnale dell’encoder e un altro della campionatura (che così si può fare in modo costante per esempio 1000 volte al secondo) e scrittura della posizione dell’encoder sull’SD.\u003c/li\u003e\n\u003cli\u003eutilizzare un modulo bluetooth per comunicare i dati a un\u0026rsquo; applicazione android, anche in real time.\u003c/li\u003e\n\u003cli\u003eaggiungere un modulo GPS in modo da poter avere nel pannello di analisi non solo la posizione della forca metro per metro ma anche la posizione del rider lungo la discesa.\u003c/li\u003e\n\u003cli\u003eredesign del sensore. Il primo design fatto è stato fatto top-down (anche perchè era la prima volta che usavo fusion360 e anche la prima che creavo davvero qualcosa di funzionale) e con forme a scatola (non strutturalmente resistenti) e si può migliorare molto. Per esempio usando una guida lineare si può diminuire la complessità del sensore (e anche il peso) ma anche i gradi di libertà del sistema. Qui sotto il design di una possibile v2 del progetto usando una guida lineare di 6mm.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\r\n \r\n\u003ccenter\u003e\r\n\u003cimg src=\"/projects/forktelemetry/rev2.PNG\"  width=\"80%\" \u003e\r\n\u003c/center\u003e\r\n\nIl file fusion360 per questa versione è disponibile su GitHub a \u003ca href=\"https://github.com/giggiox/fork-telemetry/tree/main/fusio360files/v2\"\u003equesto link\u003c/a\u003e .\u003c/p\u003e\n","description":"un nuovo modo per fare telemetria su mountain bike.","image":"/projects/forktelemetry/renders/render.png","permalink":"/it/progetti/fork-telemetry/","title":"fork telemetry"},{"content":"\u003ch1 id=\"graphtheory-visualizer\"\u003egraphTheory-Visualizer\u003c/h1\u003e\n\u003cp\u003eIl progetto è stato fatto per visualizzare le operazioni che possono essere fatte su un grafo, come BFS, DFS, Kruskal e Dijkstra.\u003c/p\u003e\n\u003cp\u003eL\u0026rsquo;obiettivo è quello di avere un update real time delle varie operazioni, in modo che se il grafo cambia mentre vi si sta svolgendo un\u0026rsquo; operazione, anche il risultato dell\u0026rsquo;operazione cambia.\u003c/p\u003e\n\u003cp\u003eIl progetto è attivo sulle GitHub pages e può essere accessibile una demo da questo link  (fruibile più semplicemente da desktop): \u003cmark\u003e\u003ca href=\"https://giggiox.github.io/graphTheory-Visualizer/\"\u003ehttps://giggiox.github.io/graphTheory-Visualizer/\u003c/a\u003e\u003c/mark\u003e  \u003cbr/\u003e\u003cbr/\u003e\u003c/p\u003e\n\u003cp\u003eL\u0026rsquo;interfaccia grafica si presenta in questo modo:\n\u003cimg src=\"/projects/graphtheoryvisualizer/interface.gif\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003ee permette:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ecreare nuovo vertice (bottone a schermo \u003ccode\u003evertex\u003c/code\u003e)\u003c/li\u003e\n\u003cli\u003ecreare un arco tra due vertici (bottone a schermo \u003ccode\u003eedge\u003c/code\u003e) cliccando prima sul primo vertice e poi sul secondo\u003c/li\u003e\n\u003cli\u003erimuovere un arco tra due vertici cliccandoci sopra\u003c/li\u003e\n\u003cli\u003eimpostare il grafo come pesato e/o diretto (switch presenti a schermo)\u003c/li\u003e\n\u003cli\u003evedere la lista di adiacenza come dropdown. Notare come se il grafo cambia per esempio se si elimina un arco, la lista cambia in tempo reale\u003c/li\u003e\n\u003cli\u003evisualizzare le operazioni possibili su un grafo. E\u0026rsquo; necessario scegliere l\u0026rsquo;operazione con il dropdown presente nella navbar e poi iniziare la visualizzazione. Notare come anche in questo caso, per esempio se si sceglie di visualizzare l\u0026rsquo;algoritmo Dijkstra e nel mentre cambiamo il grafico muovendo i vertici, allora anche l\u0026rsquo;output dell\u0026rsquo;algoritmo cambia in tempo reale. L\u0026rsquo;output di un algoritmo viene visualizzato sul grafo evidenziando vertici e archi di blu.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"esempi\"\u003eesempi\u003c/h2\u003e\n\u003cp\u003edepth-first search (DFS):\n\u003cimg src=\"/projects/graphtheoryvisualizer/dfs.gif\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003edijkstra shortest path between 2 vertices:\n\u003cimg src=\"/projects/graphtheoryvisualizer/dijkstra.gif\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003ekruskal minimum spanning tree:\n\u003cimg src=\"/projects/graphtheoryvisualizer/kruskal.gif\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eProgetto fatto usando \u003ca href=\"https://p5js.org/\"\u003ep5js\u003c/a\u003e e \u003ca href=\"https://www.typescriptlang.org/\"\u003eTypeScript\u003c/a\u003e.\u003c/p\u003e\n","description":"","image":"/projects/graphtheoryvisualizer/graph.png","permalink":"/it/progetti/graph-theory-visualizer/","title":"graph theory visualizer"}]